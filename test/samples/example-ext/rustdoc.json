{"root":"0:0:1850","crate_version":"0.1.0","includes_private":true,"index":{"0:14:1826":{"id":"0:14:1826","crate_id":0,"name":"with_rb_self","span":{"filename":"ext/src/lib.rs","begin":[33,4],"end":[33,56]},"visibility":"crate","docs":"@yard","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["rb_self",{"resolved_path":{"name":"Value","id":"20:7988:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Value","id":"20:7988:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12821:3401":{"id":"2:12821:3401","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"üóª‚ààüåè\");\n\nassert_eq!(Some(\"üóª\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:35714:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:35712:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10606:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10606:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:20:1442-0:84:1838":{"id":"b:20:1442-0:84:1838","crate_id":0,"name":null,"span":{"filename":"/Users/jbourassa/.cargo/registry/src/index.crates.io-6f17d22bba15001f/magnus-0.7.1/src/method.rs","begin":[314,0],"end":[314,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"BlockReturn","id":"20:1423:2660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BlockReturn","id":"20:1441:2660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12829:4163":{"id":"2:12829:4163","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nunsafe {\n    assert_eq!(\"L√∂we ËÄÅËôé L√©opard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11472:1536","str::slice_mut_unchecked":"2:12830:4164","crate::ops::Index":"2:3232:4371"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12876:4183":{"id":"2:12876:4183","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11466:451","str::splitn":"2:12873:4182","self::pattern":"2:12517:8866"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:37810:8853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12537:8863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:9000:4314-0:16:1841":{"id":"a:2:9000:4314-0:16:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9000:4314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NotClass","id":"0:16:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2737-0:84:1838":{"id":"b:2:2737-0:84:1838","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2740:134":{"id":"2:2740:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:12:1822":{"id":"0:12:1822","crate_id":0,"name":"bar","span":{"filename":"ext/src/lib.rs","begin":[26,4],"end":[26,43]},"visibility":"crate","docs":"@yard\n@def bar(req, opt = [], *args, reqkw:, optkw: nil, **kwargs, &block)\n@param req [T]\n@param opt [T]\n@param args [T]\n@param reqkw [T]\n@param optkw [T]\n@param kwargs [T]\n@return [nil]","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_args",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"Value","id":"20:7988:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:20:1442-0:68:1835":{"id":"b:20:1442-0:68:1835","crate_id":0,"name":null,"span":{"filename":"/Users/jbourassa/.cargo/registry/src/index.crates.io-6f17d22bba15001f/magnus-0.7.1/src/method.rs","begin":[314,0],"end":[314,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"BlockReturn","id":"20:1423:2660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BlockReturn","id":"20:1441:2660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2742-0:68:1835":{"id":"b:2:2742-0:68:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2730:2728":{"id":"2:2730:2728","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2704:141"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12911:4196":{"id":"2:12911:4196","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11466:451","self::pattern":"2:12517:8866"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:35712:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12904:4193":{"id":"2:12904:4193","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:46:2372":{"id":"0:46:2372","crate_id":0,"name":"data_type","span":{"filename":"ext/src/lib.rs","begin":[39,0],"end":[39,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"resolved_path":{"name":"magnus::DataType","id":"20:3897:2205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:68:1835":{"id":"0:68:1835","crate_id":0,"name":"OriginalName","span":{"filename":"ext/src/lib.rs","begin":[48,0],"end":[48,22]},"visibility":"crate","docs":"@yard\n@rename Example::Renamed","links":{},"attrs":["#[magnus(class = \"Example::OriginalName\")]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2953:253-0:68:1835","a:2:2993:2282-0:68:1835","a:2:9001:4603-0:68:1835","a:2:9000:4314-0:68:1835","a:2:2936:243-0:68:1835","b:2:2731-0:68:1835","b:2:2424-0:68:1835","b:2:2427-0:68:1835","b:2:2737-0:68:1835","b:2:2742-0:68:1835","b:2:3570-0:68:1835","b:2:2727-0:68:1835","b:20:3951-0:68:1835","b:20:1436-0:68:1835","b:20:1442-0:68:1835","0:54","0:53"]}}},"0:53":{"id":"0:53","crate_id":0,"name":null,"span":{"filename":"ext/src/lib.rs","begin":[47,0],"end":[47,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extern_compact","size","extern_free","extern_mark","free","extern_size","compact","mark"],"trait":{"name":"DataTypeFunctions","id":"20:3906:2166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2727-0:84:1838":{"id":"b:2:2727-0:84:1838","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2728"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:9000:4314-0:84:1838":{"id":"a:2:9000:4314-0:84:1838","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9000:4314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:20:1442-0:48:1830":{"id":"b:20:1442-0:48:1830","crate_id":0,"name":null,"span":{"filename":"/Users/jbourassa/.cargo/registry/src/index.crates.io-6f17d22bba15001f/magnus-0.7.1/src/method.rs","begin":[314,0],"end":[314,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"BlockReturn","id":"20:1423:2660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BlockReturn","id":"20:1441:2660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:15:1828":{"id":"0:15:1828","crate_id":0,"name":"secret","span":{"filename":"ext/src/lib.rs","begin":[35,4],"end":[35,29]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"ext/src/lib.rs","begin":[51,0],"end":[51,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["class_for"],"trait":{"name":"TypedData","id":"20:3943:2167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:71:1810","0:82:2372"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2737-0:16:1841":{"id":"b:2:2737-0:16:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NotClass","id":"0:16:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:13:1825":{"id":"0:13:1825","crate_id":0,"name":"baz","span":{"filename":"ext/src/lib.rs","begin":[30,4],"end":[30,26]},"visibility":"crate","docs":"@yard\n@def renamed","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12809:873":{"id":"2:12809:873","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"∆íoo\".len(), 4); // fancy f!\nassert_eq!(\"∆íoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11466:451"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2936:243-0:32:1812":{"id":"a:2:2936:243-0:32:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2936:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3570-0:48:1830":{"id":"b:2:3570-0:48:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2943:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3568:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3572:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12935:4209":{"id":"2:12935:4209","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:34755"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:20:1436-0:84:1838":{"id":"b:20:1436-0:84:1838","crate_id":0,"name":null,"span":{"filename":"/Users/jbourassa/.cargo/registry/src/index.crates.io-6f17d22bba15001f/magnus-0.7.1/src/method.rs","begin":[279,0],"end":[279,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"ReturnValue","id":"20:1373:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ReturnValue","id":"20:1435:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2953:253-0:16:1841":{"id":"a:2:2953:253-0:16:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2953:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NotClass","id":"0:16:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12817:2383":{"id":"2:12817:2383","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12072:8870"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2427-0:48:1830":{"id":"b:2:2427-0:48:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2943:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:21440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12894:4188":{"id":"2:12894:4188","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12517:8866","`DoubleEndedIterator`":"2:7907:127","prim@char":"1:11466:451","str::match_indices":"2:12891:4187"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:37856:8882","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12537:8863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:18":{"id":"0:18","crate_id":0,"name":null,"span":{"filename":"ext/src/lib.rs","begin":[7,0],"end":[7,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["class_for"],"trait":{"name":"TypedData","id":"20:3943:2167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:19:1810","0:30:2372"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12811:4156":{"id":"2:12811:4156","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nassert!(s.is_char_boundary(0));\n// start of `ËÄÅ`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `√∂`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `ËÄÅ`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:32:1812":{"id":"b:2:2731-0:32:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5554:4220":{"id":"5:5554:4220","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12931:4205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:68:1835":{"id":"b:2:2731-0:68:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3570-0:84:1838":{"id":"b:2:3570-0:84:1838","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2943:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3568:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3572:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:48:1830":{"id":"0:48:1830","crate_id":0,"name":"SomeEnum","span":{"filename":"ext/src/lib.rs","begin":[40,0],"end":[43,1]},"visibility":"crate","docs":"@yard","links":{},"attrs":["#[magnus(class = \"Example::SomeEnum\")]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:49:1831","0:51:1832"],"impls":["a:2:2953:253-0:48:1830","a:2:2993:2282-0:48:1830","a:2:9001:4603-0:48:1830","a:2:9000:4314-0:48:1830","a:2:2936:243-0:48:1830","b:2:2731-0:48:1830","b:2:2424-0:48:1830","b:2:2427-0:48:1830","b:2:2737-0:48:1830","b:2:2742-0:48:1830","b:2:3570-0:48:1830","b:2:2727-0:48:1830","b:20:3951-0:48:1830","b:20:1436-0:48:1830","b:20:1442-0:48:1830","0:33","0:34"]}}},"2:12923:4200":{"id":"2:12923:4200","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11466:451","self::pattern":"2:12517:8866"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12537:8863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12838:4171":{"id":"2:12838:4171","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:37942:4472","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12908:4195":{"id":"2:12908:4195","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11466:451","self::pattern":"2:12517:8866"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3572:1632":{"id":"2:3572:1632","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:33484:8929","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2427-0:68:1835":{"id":"b:2:2427-0:68:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2943:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:21440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:55:1810":{"id":"0:55:1810","crate_id":0,"name":"class","span":{"filename":"ext/src/lib.rs","begin":[47,0],"end":[47,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ruby",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"magnus::Ruby","id":"20:23:2170","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"magnus::RClass","id":"20:4807:2172","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2427-0:84:1838":{"id":"b:2:2427-0:84:1838","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2943:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:21440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:9000:4314-0:32:1812":{"id":"a:2:9000:4314-0:32:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9000:4314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12832:4166":{"id":"2:12832:4166","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n```","links":{"str::split_at":"2:12831:4165"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:84:1838":{"id":"b:2:2742-0:84:1838","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:9001:4603-0:68:1835":{"id":"a:2:9001:4603-0:68:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9001:4603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12831:4165":{"id":"2:12831:4165","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n```","links":{"str::split_at_mut":"2:12832:4166"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12808":{"id":"2:12808","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12809:873","2:12810:2735","2:12811:4156","2:12812:4157","2:12814:4158","2:12817:2383","2:12818:4159","2:12819:339","2:12820:4160","2:12821:3401","2:12823:4161","2:12825:3403","2:12827:4162","2:12829:4163","2:12830:4164","2:12831:4165","2:12832:4166","2:12833:4167","2:12834:4168","2:12835:4103","2:12836:4169","2:12837:4170","2:12838:4171","2:12839:4172","2:12840:4173","2:12841:4174","2:12844:4175","2:12847:4176","2:12850:2775","2:12854:2734","2:12858:4177","2:12861:4178","2:12864:4179","2:12867:4180","2:12870:4181","2:12873:4182","2:12876:4183","2:12879:4184","2:12882:4185","2:12885:2083","2:12888:4186","2:12891:4187","2:12894:4188","2:12897:4189","2:12899:4190","2:12901:4191","2:12903:4192","2:12904:4193","2:12905:4194","2:12908:4195","2:12911:4196","2:12914:4197","2:12917:4198","2:12920:4199","2:12923:4200","2:12926:4201","2:12928:4202","2:12929:4203","2:12930:4204","2:12931:4205","2:12932:4206","2:12933:4207","2:12934:4208","2:12935:4209","2:12936:4210","2:12938:4211","2:12939:4212"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5543:4216":{"id":"5:5543:4216","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Œ£\";\n\nassert_eq!(\"œÉ\", sigma.to_lowercase());\n\n// but at the end of a word, it's œÇ, not œÉ:\nlet odysseus = \"·ΩàŒîŒ•Œ£Œ£ŒïŒéŒ£\";\n\nassert_eq!(\"·ΩÄŒ¥œÖœÉœÉŒµœçœÇ\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:20:1442-0:32:1812":{"id":"b:20:1442-0:32:1812","crate_id":0,"name":null,"span":{"filename":"/Users/jbourassa/.cargo/registry/src/index.crates.io-6f17d22bba15001f/magnus-0.7.1/src/method.rs","begin":[314,0],"end":[314,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"BlockReturn","id":"20:1423:2660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BlockReturn","id":"20:1441:2660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12931:4205":{"id":"2:12931:4205","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Gr√º√üe, J√ºrgen ‚ù§\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:32:1812":{"id":"b:2:2727-0:32:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2728"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12858:4177":{"id":"2:12858:4177","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12517:8866","`DoubleEndedIterator`":"2:7907:127","prim@char":"1:11466:451","str::split_whitespace":"2:12836:4169","str::rsplit":"2:12864:4179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:37688:4476","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12827:4162":{"id":"2:12827:4162","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"üóª‚ààüåè\");\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10606:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10606:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:5536:4213":{"id":"5:5536:4213","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:2286","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:281:2286","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:33":{"id":"0:33","crate_id":0,"name":null,"span":{"filename":"ext/src/lib.rs","begin":[39,0],"end":[39,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extern_compact","size","extern_free","extern_mark","free","extern_size","compact","mark"],"trait":{"name":"DataTypeFunctions","id":"20:3906:2166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2727-0:68:1835":{"id":"b:2:2727-0:68:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2728"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12814:4158":{"id":"2:12814:4158","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°üíõ\");\n```","links":{"str::floor_char_boundary":"2:12812:4157"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:20:3951-0:68:1835":{"id":"b:20:3951-0:68:1835","crate_id":0,"name":null,"span":{"filename":"/Users/jbourassa/.cargo/registry/src/index.crates.io-6f17d22bba15001f/magnus-0.7.1/src/typed_data.rs","begin":[516,0],"end":[518,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"TypedData","id":"20:3943:2167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["into_value","into_value_unchecked"],"trait":{"name":"IntoValue","id":"20:1289:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["20:3953:21445"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2737-0:32:1812":{"id":"b:2:2737-0:32:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2733:744":{"id":"2:2733:744","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"ext/src/lib.rs","begin":[7,0],"end":[7,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extern_compact","size","extern_free","extern_mark","free","extern_size","compact","mark"],"trait":{"name":"DataTypeFunctions","id":"20:3906:2166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2427-0:16:1841":{"id":"b:2:2427-0:16:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2943:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NotClass","id":"0:16:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:21440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12819:339":{"id":"2:12819:339","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12820:4160","`u8`":"1:11483:1641"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2993:2282-0:32:1812":{"id":"a:2:2993:2282-0:32:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2993:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:30:2372":{"id":"0:30:2372","crate_id":0,"name":"data_type","span":{"filename":"ext/src/lib.rs","begin":[7,0],"end":[7,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"resolved_path":{"name":"magnus::DataType","id":"20:3897:2205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:32:1812":{"id":"0:32:1812","crate_id":0,"name":"Foo","span":{"filename":"ext/src/lib.rs","begin":[8,0],"end":[8,13]},"visibility":"crate","docs":"@yard","links":{},"attrs":["#[magnus(class = \"Example::Foo\")]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:10","a:2:2953:253-0:32:1812","a:2:2993:2282-0:32:1812","a:2:9001:4603-0:32:1812","a:2:9000:4314-0:32:1812","a:2:2936:243-0:32:1812","b:2:2731-0:32:1812","b:2:2424-0:32:1812","b:2:2427-0:32:1812","b:2:2737-0:32:1812","b:2:2742-0:32:1812","b:2:3570-0:32:1812","b:2:2727-0:32:1812","b:20:3951-0:32:1812","b:20:1436-0:32:1812","b:20:1442-0:32:1812","0:17","0:18"]}}},"b:20:3951-0:84:1838":{"id":"b:20:3951-0:84:1838","crate_id":0,"name":null,"span":{"filename":"/Users/jbourassa/.cargo/registry/src/index.crates.io-6f17d22bba15001f/magnus-0.7.1/src/typed_data.rs","begin":[516,0],"end":[518,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"TypedData","id":"20:3943:2167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["into_value","into_value_unchecked"],"trait":{"name":"IntoValue","id":"20:1289:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["20:3953:21445"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:9000:4314-0:48:1830":{"id":"a:2:9000:4314-0:48:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9000:4314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12818:4159":{"id":"2:12818:4159","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"üóª‚ààüåè\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"üçî‚ààüåè\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12840:4173":{"id":"2:12840:4173","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Za≈º√≥≈Çƒá gƒô≈õlƒÖ ja≈∫≈Ñ\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:37980:8867","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12847:4176":{"id":"2:12847:4176","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11466:451","self::pattern":"2:12517:8866"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12537:8863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12888:4186":{"id":"2:12888:4186","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12517:8866","`DoubleEndedIterator`":"2:7907:127","prim@char":"1:11466:451","str::matches":"2:12885:2083"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:37910:8884","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12537:8863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:48:1830":{"id":"b:2:2737-0:48:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:51:1832":{"id":"0:51:1832","crate_id":0,"name":"_B","span":{"filename":"ext/src/lib.rs","begin":[42,2],"end":[42,4]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2953:253-0:48:1830":{"id":"a:2:2953:253-0:48:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2953:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12914:4197":{"id":"2:12914:4197","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11466:451","self::pattern":"2:12517:8866"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:35712:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12537:8863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12917:4198":{"id":"2:12917:4198","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11466:451","self::pattern":"2:12517:8866"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12537:8863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49:1831":{"id":"0:49:1831","crate_id":0,"name":"_A","span":{"filename":"ext/src/lib.rs","begin":[41,2],"end":[41,4]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12930:4204":{"id":"2:12930:4204","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√∂S\"));\nassert!(!\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√ñS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12929:4203":{"id":"2:12929:4203","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:33671:24016","Self::is_ascii":"2:12928:4202"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:35712:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:33671:24016","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12839:4172":{"id":"2:12839:4172","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:37952:8880","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12933:4207":{"id":"2:12933:4207","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:34755"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:16:1841":{"id":"0:16:1841","crate_id":0,"name":"NotClass","span":{"filename":"ext/src/lib.rs","begin":[57,0],"end":[57,18]},"visibility":"crate","docs":"@yard\n@module","links":{},"attrs":["#[allow(unused)]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2953:253-0:16:1841","a:2:2993:2282-0:16:1841","a:2:9001:4603-0:16:1841","a:2:9000:4314-0:16:1841","a:2:2936:243-0:16:1841","b:2:2731-0:16:1841","b:2:2424-0:16:1841","b:2:2427-0:16:1841","b:2:2737-0:16:1841","b:2:2742-0:16:1841","b:2:3570-0:16:1841","b:2:2727-0:16:1841"]}}},"2:12830:4164":{"id":"2:12830:4164","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11472:1536","crate::ops::IndexMut":"2:3236:4372","str::slice_unchecked":"2:12829:4163"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12938:4211":{"id":"2:12938:4211","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4745:4211"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:37996:4302","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12867:4180":{"id":"2:12867:4180","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12517:8866","str::split":"2:12858:4177","prim@char":"1:11466:451","`DoubleEndedIterator`":"2:7907:127","str::rsplit_terminator":"2:12870:4181"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:37738:8886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:84:1838":{"id":"b:2:2731-0:84:1838","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12835:4103":{"id":"2:12835:4103","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:37674:4475","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"ext/src/lib.rs","begin":[51,0],"end":[51,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extern_compact","size","extern_free","extern_mark","free","extern_size","compact","mark"],"trait":{"name":"DataTypeFunctions","id":"20:3906:2166","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2953:253-0:32:1812":{"id":"a:2:2953:253-0:32:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2953:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12905:4194":{"id":"2:12905:4194","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11466:451","self::pattern":"2:12517:8866"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12542:8861","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5540:4215":{"id":"5:5540:4215","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:82:2372":{"id":"0:82:2372","crate_id":0,"name":"data_type","span":{"filename":"ext/src/lib.rs","begin":[51,0],"end":[51,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"resolved_path":{"name":"magnus::DataType","id":"20:3897:2205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:20:3951-0:48:1830":{"id":"b:20:3951-0:48:1830","crate_id":0,"name":null,"span":{"filename":"/Users/jbourassa/.cargo/registry/src/index.crates.io-6f17d22bba15001f/magnus-0.7.1/src/typed_data.rs","begin":[516,0],"end":[518,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"TypedData","id":"20:3943:2167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["into_value","into_value_unchecked"],"trait":{"name":"IntoValue","id":"20:1289:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["20:3953:21445"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2424-0:84:1838":{"id":"b:2:2424-0:84:1838","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2943:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:2068"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12882:4185":{"id":"2:12882:4185","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:35712:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12537:8863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2936:243-0:48:1830":{"id":"a:2:2936:243-0:48:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2936:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:85:1842":{"id":"0:85:1842","crate_id":0,"name":"init","span":{"filename":"ext/src/lib.rs","begin":[60,0],"end":[70,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"2:35857:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"magnus::Error","id":"20:4934:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12934:4208":{"id":"2:12934:4208","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:34755"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12854:2734":{"id":"2:12854:2734","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('√©'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:35714:197","prim@char":"1:11466:451","self::pattern":"2:12517:8866"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:35712:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12537:8863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86:2436":{"id":"0:86:2436","crate_id":0,"name":"Init_ext","span":{"filename":"ext/src/lib.rs","begin":[59,0],"end":[59,15]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(non_snake_case)]","#[no_mangle]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":{"C":{"unwind":false}}},"has_body":true}}},"2:12897:4189":{"id":"2:12897:4189","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:32:1812":{"id":"b:2:2424-0:32:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2943:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:2068"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2427-0:32:1812":{"id":"b:2:2427-0:32:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2943:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:21440"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"ext/src/lib.rs","begin":[39,0],"end":[39,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["class_for"],"trait":{"name":"TypedData","id":"20:3943:2167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:1810","0:46:2372"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5535":{"id":"5:5535","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5536:4213","5:5537:4214","5:5540:4215","5:5543:4216","5:5551:4217","5:5552:4218","5:5553:4219","5:5554:4220","5:5555:4221"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:84:1838":{"id":"0:84:1838","crate_id":0,"name":"Secret","span":{"filename":"ext/src/lib.rs","begin":[52,0],"end":[52,16]},"visibility":"crate","docs":"Secret: not documented","links":{},"attrs":["#[magnus(class = \"Example::Secret\")]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2953:253-0:84:1838","a:2:2993:2282-0:84:1838","a:2:9001:4603-0:84:1838","a:2:9000:4314-0:84:1838","a:2:2936:243-0:84:1838","b:2:2731-0:84:1838","b:2:2424-0:84:1838","b:2:2427-0:84:1838","b:2:2737-0:84:1838","b:2:2742-0:84:1838","b:2:3570-0:84:1838","b:2:2727-0:84:1838","b:20:3951-0:84:1838","b:20:1436-0:84:1838","b:20:1442-0:84:1838","0:69","0:70"]}}},"b:2:2424-0:68:1835":{"id":"b:2:2424-0:68:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2943:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:2068"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2746:1617":{"id":"2:2746:1617","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:35857:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12873:4182":{"id":"2:12873:4182","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11466:451","self::pattern":"2:12517:8866","str::rsplitn":"2:12876:4183"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:37792:8855","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2936:243-0:16:1841":{"id":"a:2:2936:243-0:16:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2936:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NotClass","id":"0:16:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12926:4201":{"id":"2:12926:4201","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12478:133","`FromStr`":"2:12477:4621"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:35857:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12477:4621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12477:4621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12936:4210":{"id":"2:12936:4210","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"‚ù§\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_debug().to_string(), \"‚ù§\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4744:4210"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:37987:8877","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:9001:4603-0:32:1812":{"id":"a:2:9001:4603-0:32:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9001:4603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2426:2068":{"id":"2:2426:2068","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66:2372":{"id":"0:66:2372","crate_id":0,"name":"data_type","span":{"filename":"ext/src/lib.rs","begin":[47,0],"end":[47,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"resolved_path":{"name":"magnus::DataType","id":"20:3897:2205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:48:1830":{"id":"b:2:2742-0:48:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:20:1436-0:32:1812":{"id":"b:20:1436-0:32:1812","crate_id":0,"name":null,"span":{"filename":"/Users/jbourassa/.cargo/registry/src/index.crates.io-6f17d22bba15001f/magnus-0.7.1/src/method.rs","begin":[279,0],"end":[279,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"ReturnValue","id":"20:1373:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ReturnValue","id":"20:1435:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3570-0:68:1835":{"id":"b:2:3570-0:68:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2943:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3568:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3572:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2953:253-0:84:1838":{"id":"a:2:2953:253-0:84:1838","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2953:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:20:1436-0:68:1835":{"id":"b:20:1436-0:68:1835","crate_id":0,"name":null,"span":{"filename":"/Users/jbourassa/.cargo/registry/src/index.crates.io-6f17d22bba15001f/magnus-0.7.1/src/method.rs","begin":[279,0],"end":[279,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"ReturnValue","id":"20:1373:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ReturnValue","id":"20:1435:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:35:1810":{"id":"0:35:1810","crate_id":0,"name":"class","span":{"filename":"ext/src/lib.rs","begin":[39,0],"end":[39,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ruby",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"magnus::Ruby","id":"20:23:2170","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"magnus::RClass","id":"20:4807:2172","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:16:1841":{"id":"b:2:2742-0:16:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NotClass","id":"0:16:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5555:4221":{"id":"5:5555:4221","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"gr√º√üe, j√ºrgen ‚ù§\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12932:4206"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"ext/src/lib.rs","begin":[47,0],"end":[47,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["class_for"],"trait":{"name":"TypedData","id":"20:3943:2167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:55:1810","0:66:2372"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12837:4170":{"id":"2:12837:4170","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12836:4169"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:37971:8868","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2993:2282-0:48:1830":{"id":"a:2:2993:2282-0:48:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2993:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2727-0:16:1841":{"id":"b:2:2727-0:16:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NotClass","id":"0:16:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2728"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12812:4157":{"id":"2:12812:4157","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji üßë‚Äçüî¨ (scientist) could be split so that the string only\nincludes üßë (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2429:21440":{"id":"2:2429:21440","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:9001:4603-0:84:1838":{"id":"a:2:9001:4603-0:84:1838","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9001:4603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2936:243-0:84:1838":{"id":"a:2:2936:243-0:84:1838","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2936:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12864:4179":{"id":"2:12864:4179","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12517:8866","`DoubleEndedIterator`":"2:7907:127","prim@char":"1:11466:451","str::split":"2:12858:4177"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:37706:8851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12537:8863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12885:2083":{"id":"2:12885:2083","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12517:8866","`DoubleEndedIterator`":"2:7907:127","prim@char":"1:11466:451","str::rmatches":"2:12888:4186"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:37892:8883","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12901:4191":{"id":"2:12901:4191","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5551:4217":{"id":"5:5551:4217","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tsch√º√ü\";\n\nassert_eq!(\"TSCH√úSS\", s.to_uppercase());\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:71:1810":{"id":"0:71:1810","crate_id":0,"name":"class","span":{"filename":"ext/src/lib.rs","begin":[51,0],"end":[51,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ruby",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"magnus::Ruby","id":"20:23:2170","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"magnus::RClass","id":"20:4807:2172","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12834:4168":{"id":"2:12834:4168","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"yÃÜes\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'yÃÜ')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11466:451"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:37664:8872","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:20:1436-0:48:1830":{"id":"b:20:1436-0:48:1830","crate_id":0,"name":null,"span":{"filename":"/Users/jbourassa/.cargo/registry/src/index.crates.io-6f17d22bba15001f/magnus-0.7.1/src/method.rs","begin":[279,0],"end":[279,55]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"ReturnValue","id":"20:1373:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ReturnValue","id":"20:1435:2665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2953:253-0:68:1835":{"id":"a:2:2953:253-0:68:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2953:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12861:4178":{"id":"2:12861:4178","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11466:451","self::pattern":"2:12517:8866"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12333:8857","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5552:4218":{"id":"5:5552:4218","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:281:2286","`String`":"5:7534:249"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:2286","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:9001:4603-0:16:1841":{"id":"a:2:9001:4603-0:16:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9001:4603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NotClass","id":"0:16:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:9001:4603-0:48:1830":{"id":"a:2:9001:4603-0:48:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9001:4603","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12850:2775":{"id":"2:12850:2775","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('√©'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:35714:197","prim@char":"1:11466:451","self::pattern":"2:12517:8866"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:35712:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3570-0:32:1812":{"id":"b:2:3570-0:32:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2943:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3568:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3572:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2936:243-0:68:1835":{"id":"a:2:2936:243-0:68:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2936:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:9000:4314-0:68:1835":{"id":"a:2:9000:4314-0:68:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9000:4314","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12810:2735":{"id":"2:12810:2735","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12833:4167":{"id":"2:12833:4167","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"yÃÜ\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'yÃÜ'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11466:451"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:37658:8873","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12844:4175":{"id":"2:12844:4175","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11466:451","self::pattern":"2:12517:8866"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12841:4174":{"id":"2:12841:4174","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11466:451","self::pattern":"2:12517:8866"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:32:1812":{"id":"b:2:2742-0:32:1812","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2731-0:48:1830":{"id":"b:2:2731-0:48:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12920:4199":{"id":"2:12920:4199","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11466:451","self::pattern":"2:12517:8866"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12891:4187":{"id":"2:12891:4187","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12517:8866","`DoubleEndedIterator`":"2:7907:127","prim@char":"1:11466:451","str::rmatch_indices":"2:12894:4188"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:37838:8881","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5537:4214":{"id":"5:5537:4214","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2993:2282-0:68:1835":{"id":"a:2:2993:2282-0:68:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2993:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2737-0:68:1835":{"id":"b:2:2737-0:68:1835","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OriginalName","id":"0:68:1835","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3570-0:16:1841":{"id":"b:2:3570-0:16:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2943:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3568:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NotClass","id":"0:16:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3572:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"20:3953:21445":{"id":"20:3953:21445","crate_id":20,"name":"into_value_with","span":{"filename":"/Users/jbourassa/.cargo/registry/src/index.crates.io-6f17d22bba15001f/magnus-0.7.1/src/typed_data.rs","begin":[521,4],"end":[521,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["handle",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Ruby","id":"20:23:2170","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Value","id":"20:7988:1807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1850":{"id":"0:0:1850","crate_id":0,"name":"ext","span":{"filename":"ext/src/lib.rs","begin":[1,0],"end":[70,1]},"visibility":"public","docs":null,"links":{},"attrs":["#![allow(rustdoc::broken_intra_doc_links)]","#![allow(rustdoc::invalid_html_tags)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:32:1812","0:48:1830","0:68:1835","0:84:1838","0:16:1841","0:85:1842","0:86:2436"],"is_stripped":false}}},"a:2:2993:2282-0:84:1838":{"id":"a:2:2993:2282-0:84:1838","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2993:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Secret","id":"0:84:1838","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12928:4202":{"id":"2:12928:4202","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12820:4160":{"id":"2:12820:4160","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11483:1641"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12825:3403":{"id":"2:12825:3403","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"üóª‚ààüåè\";\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10606:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10606:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:48:1830":{"id":"b:2:2424-0:48:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2943:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:2068"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12899:4190":{"id":"2:12899:4190","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊¢') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:16:1841":{"id":"b:2:2731-0:16:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NotClass","id":"0:16:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12823:4161":{"id":"2:12823:4161","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:35714:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:35712:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10606:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10606:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2745:134":{"id":"2:2745:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:26144:4637","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:19:1810":{"id":"0:19:1810","crate_id":0,"name":"class","span":{"filename":"ext/src/lib.rs","begin":[7,0],"end":[7,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ruby",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"magnus::Ruby","id":"20:23:2170","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"magnus::RClass","id":"20:4807:2172","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:11:1037":{"id":"0:11:1037","crate_id":0,"name":"new","span":{"filename":"ext/src/lib.rs","begin":[13,4],"end":[15,5]},"visibility":"crate","docs":"@yard\n@return Example::Foo","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12870:4181":{"id":"2:12870:4181","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12517:8866","str::split":"2:12858:4177","prim@char":"1:11466:451","str::split_terminator":"2:12867:4180"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:37756:8885","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12537:8863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12939:4212":{"id":"2:12939:4212","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4742:4212"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:38005:8878","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2741:1619":{"id":"2:2741:1619","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:35857:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12879:4184":{"id":"2:12879:4184","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:35712:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12522:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:10":{"id":"0:10","crate_id":0,"name":null,"span":{"filename":"ext/src/lib.rs","begin":[10,0],"end":[36,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:11:1037","0:12:1822","0:13:1825","0:14:1826","0:15:1828"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2993:2282-0:16:1841":{"id":"a:2:2993:2282-0:16:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2993:2282","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NotClass","id":"0:16:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2424-0:16:1841":{"id":"b:2:2424-0:16:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2943:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NotClass","id":"0:16:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:2068"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2727-0:48:1830":{"id":"b:2:2727-0:48:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SomeEnum","id":"0:48:1830","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2728"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12836:4169":{"id":"2:12836:4169","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12837:4170"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:37962:8869","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12903:4192":{"id":"2:12903:4192","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™\";\nassert!(Some('◊¢') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:20:3951-0:32:1812":{"id":"b:20:3951-0:32:1812","crate_id":0,"name":null,"span":{"filename":"/Users/jbourassa/.cargo/registry/src/index.crates.io-6f17d22bba15001f/magnus-0.7.1/src/typed_data.rs","begin":[516,0],"end":[518,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"TypedData","id":"20:3943:2167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["into_value","into_value_unchecked"],"trait":{"name":"IntoValue","id":"20:1289:2179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Foo","id":"0:32:1812","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["20:3953:21445"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12932:4206":{"id":"2:12932:4206","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GR√ú√üE, J√úRGEN ‚ù§\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"gr√ú√üe, j√úrgen ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5553:4219":{"id":"5:5553:4219","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"2:45908:4762":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:17112:4528":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:13765:17880":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:7490:4291":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:7753:4359":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:9790:14294":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:3200:138":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:6466:239":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:34280:2620":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"6:4453:12752":{"crate_id":6,"path":["libc","unix","bsd","apple","rusage_info_v2"],"kind":"struct"},"2:51939:5750":{"crate_id":2,"path":["core","core_arch","aarch64","neon","float64x1x2_t"],"kind":"struct"},"23:51:2167":{"crate_id":23,"path":["magnus_macros","TypedData"],"kind":"proc_derive"},"20:7340:2190":{"crate_id":20,"path":["magnus","r_complex","RComplex"],"kind":"struct"},"17:12418:14560":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"18:555:18895":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"5:2703:30643":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:14786:18638":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:10596:4442":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"5:3155:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"20:4976:2174":{"crate_id":20,"path":["magnus","exception","Exception"],"kind":"struct"},"21:2754:2652":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","ruby_special_consts"],"kind":"enum"},"10:0:1970":{"crate_id":10,"path":["adler"],"kind":"module"},"2:13158:211":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:8906:241":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:11014:14340":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:38262:8902":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:5130:126":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:37500:8843":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:6530:3001":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"6:3971:12708":{"crate_id":6,"path":["libc","unix","bsd","apple","sf_hdtr"],"kind":"struct"},"16:5727:14126":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"15:306:13141":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:4081:12715":{"crate_id":6,"path":["libc","unix","bsd","apple","mach_header"],"kind":"struct"},"1:903:3044":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:3064:9216":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:4260:12732":{"crate_id":6,"path":["libc","unix","bsd","apple","ntptimeval"],"kind":"struct"},"6:5249:12939":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:4279:12735":{"crate_id":6,"path":["libc","unix","bsd","apple","thread_time_constraint_policy"],"kind":"struct"},"17:2031:14383":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:3052:9215":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:10337:4435":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"17:11800:14467":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:13707:17876":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:34266:2824":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:928:4336":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"5:7534:249":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"5:40:2997":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:15374:18682":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:10686:3132":{"crate_id":1,"path":["std","sys","unix","thread_parking","darwin","Parker"],"kind":"struct"},"16:6332:14146":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:15767:4442":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:35925:202":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:38423:9364":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:4072:12714":{"crate_id":6,"path":["libc","unix","bsd","apple","xucred"],"kind":"struct"},"2:44511:5685":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint8x16x2_t"],"kind":"struct"},"1:11470:338":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:1760:4377":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:7503:14187":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"11:430:31610":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"20:4882:18986":{"crate_id":20,"path":["magnus","encoding","Coderange"],"kind":"enum"},"17:12684:14274":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"20:4994:2176":{"crate_id":20,"path":["magnus","float","Float"],"kind":"struct"},"6:4703:12768":{"crate_id":6,"path":["libc","unix","bsd","apple","pthread_cond_t"],"kind":"struct"},"5:7497:2821":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"20:7394:2198":{"crate_id":20,"path":["magnus","r_string","RString"],"kind":"struct"},"1:5968:3087":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:44631:5697":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int16x8x2_t"],"kind":"struct"},"16:4613:13771":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"5:3607:4329":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:14878:18641":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:12298:9371":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"16:8195:14217":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:37031:27857":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"14:187:13124":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"11:1910:4345":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:36768:8796":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:37892:8883":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:15224:18666":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:10587:3130":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"21:4385:21405":{"crate_id":21,"path":["rb_sys","bindings","unstable","rb_internal_thread_event_data"],"kind":"struct"},"20:1432:2209":{"crate_id":20,"path":["magnus","method","Method"],"kind":"trait"},"6:3653:12684":{"crate_id":6,"path":["libc","unix","bsd","apple","glob_t"],"kind":"struct"},"2:15645:4701":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:3197:137":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"16:3888:13286":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:13754:17879":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:45545:4719":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"20:3381:19279":{"crate_id":20,"path":["magnus","scan_args","private","ScanArgsRequired"],"kind":"trait"},"0:86:2436":{"crate_id":0,"path":["ext","Init_ext"],"kind":"function"},"1:2622:4477":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:11437:4313":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:45748:4732":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:44470:5681":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int8x16x4_t"],"kind":"struct"},"16:4641:13775":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:11507:14428":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"1:3934:4532":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:15022:28537":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"18:575:18888":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"20:1094:19116":{"crate_id":20,"path":["magnus","gc","Marker"],"kind":"struct"},"2:3447:8789":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:26191:28185":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"16:2428:13196":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:2336:9239":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"6:4409:12749":{"crate_id":6,"path":["libc","unix","bsd","apple","task_thread_times_info"],"kind":"struct"},"17:15903:18851":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"1:1743:658":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:7644:3099":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"16:4417:13719":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:8674:4666":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:34503:9176":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:10129:4495":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:5062:209":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:11491:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:12042:9324":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:3166:26827":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:4:1113":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"5:3818:3044":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:24988:8993":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:3005:4695":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:34313:2835":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"11:2542:28195":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:47734:4791":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:11155:14366":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"2:6564:9165":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"17:14282:17912":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:1538:2739":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:2662:4486":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:5963:14134":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"20:3954:2802":{"crate_id":20,"path":["magnus","typed_data","Obj"],"kind":"struct"},"2:2421:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:16170:17382":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"17:10803:14311":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:14235:17909":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"11:351:31611":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"1:893:3024":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"6:4510:12754":{"crate_id":6,"path":["libc","unix","bsd","apple","rusage_info_v4"],"kind":"struct"},"2:34360:4369":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"8:0:1968":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"13:196:31633":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:1750:1500":{"crate_id":2,"path":["core","mem","size_of_val"],"kind":"function"},"6:0:878":{"crate_id":6,"path":["libc"],"kind":"module"},"17:14904:18631":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:4243:8944":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"17:261:32803":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"18:454:8993":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:14969:18630":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:12584:14552":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"1:10417:3125":{"crate_id":1,"path":["std","sys","unix","locks","pthread_rwlock","AllocatedRwLock"],"kind":"struct"},"2:33220:8940":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:3278:4492":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:45010:5735":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int64x2x4_t"],"kind":"struct"},"2:15769:4705":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"20:1862:2187":{"crate_id":20,"path":["magnus","object","Object"],"kind":"trait"},"17:15535:18690":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:14099:17900":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"5:1527:216":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:16262:27880":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:3962:9855":{"crate_id":6,"path":["libc","unix","bsd","apple","flock"],"kind":"struct"},"2:38665:4844":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"6:4557:12756":{"crate_id":6,"path":["libc","unix","bsd","apple","attrlist"],"kind":"struct"},"16:7067:32065":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:16771:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"18:563:8864":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"5:7316:29328":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:4444:3033":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:8187:4597":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:11047:8853":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:13695:14494":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"16:8205:14218":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:9678:14279":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"5:5650:3042":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:12191:14500":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:37962:8869":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:34151:8878":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:10785:32252":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:4344:4562":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:3432:28301":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:11817:14492":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:6686:3001":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"11:800:3024":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"16:6401:14152":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:9624:14264":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:2228:14402":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:10881:8844":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:14662:18633":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:6352:14148":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"16:8154:14214":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"11:811:3044":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"17:10657:14308":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"5:7523:3040":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"17:3460:14455":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"16:4835:13849":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:15993:28234":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"21:3838:21381":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_econv_result_t"],"kind":"enum"},"1:10530:4636":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:10775:14310":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:11399:14376":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:11061:8856":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"16:2907:13216":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:44239:5663":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly64x1_t"],"kind":"struct"},"6:4120:12718":{"crate_id":6,"path":["libc","unix","bsd","apple","segment_command_64"],"kind":"struct"},"17:10035:14115":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:3364:4500":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"16:8050:14209":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:15166:4707":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"20:8004:2609":{"crate_id":20,"path":["magnus","value","NonZeroValue"],"kind":"struct"},"16:2596:13203":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:1819:4393":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:3239:4496":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:2933:13217":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"20:8065:2610":{"crate_id":20,"path":["magnus","value","Id"],"kind":"struct"},"16:3797:13243":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"6:4747:12772":{"crate_id":6,"path":["libc","unix","bsd","apple","processor_cpu_load_info"],"kind":"struct"},"0:51:1832":{"crate_id":0,"path":["ext","SomeEnum","_B"],"kind":"variant"},"6:1160:10383":{"crate_id":6,"path":["libc","unix","bsd","utsname"],"kind":"struct"},"6:4302:12739":{"crate_id":6,"path":["libc","unix","bsd","apple","thread_latency_qos_policy"],"kind":"struct"},"2:44403:5674":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint64x2_t"],"kind":"struct"},"1:7576:4397":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:8128:4589":{"crate_id":1,"path":["std","os","macos","raw","stat"],"kind":"struct"},"16:6513:14159":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:13491:17396":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:10569:32621":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"20:4230:2598":{"crate_id":20,"path":["magnus","value","InnerRef"],"kind":"trait"},"2:37910:8884":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"16:7554:14192":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:4846:12781":{"crate_id":6,"path":["libc","unix","bsd","apple","if_msghdr2"],"kind":"struct"},"2:2324:635":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"16:2526:13200":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:38695:8781":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:4057:12712":{"crate_id":6,"path":["libc","unix","bsd","apple","proc_taskallinfo"],"kind":"struct"},"5:1536:4358":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:4104:12717":{"crate_id":6,"path":["libc","unix","bsd","apple","segment_command"],"kind":"struct"},"2:10992:8852":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"6:3950:12707":{"crate_id":6,"path":["libc","unix","bsd","apple","termios"],"kind":"struct"},"5:6604:2739":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"6:4696:12767":{"crate_id":6,"path":["libc","unix","bsd","apple","pthread_mutex_t"],"kind":"struct"},"1:3237:4495":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:6017:14137":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:2169:14417":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:13478:17395":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:11932:14453":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:3315:13223":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:10172:14300":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:4678:12765":{"crate_id":6,"path":["libc","unix","bsd","apple","dirent"],"kind":"struct"},"2:10387:3076":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"16:3461:13224":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:3201:4494":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"20:3047:19235":{"crate_id":20,"path":["magnus","r_string","CharBytes"],"kind":"struct"},"17:16146:18865":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"2:15981:4841":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"2:38483:4699":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"17:11065:14345":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:10102:14270":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"6:4580:12759":{"crate_id":6,"path":["libc","unix","bsd","apple","attribute_set_t"],"kind":"struct"},"18:403:18902":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:16522:4529":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:4782:12777":{"crate_id":6,"path":["libc","unix","bsd","apple","thread_basic_info"],"kind":"struct"},"1:8096:4514":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:26292:9191":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"11:1582:13109":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:536:31957":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:12222:9370":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:5982:14135":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"5:1685:3001":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:37987:8877":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:13787:17881":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"20:4786:33084":{"crate_id":20,"path":["magnus","api","RubyGvlState"],"kind":"enum"},"1:8966:22963":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"17:12898:14321":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:10488:23008":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"16:4949:13867":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:36420:4649":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"6:4320:12609":{"crate_id":6,"path":["libc","unix","bsd","apple","mstats"],"kind":"struct"},"20:7346:2191":{"crate_id":20,"path":["magnus","r_file","RFile"],"kind":"struct"},"2:46298:27871":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:15345:18679":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"5:2048:4359":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:5447:226":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:10348:136":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:12103:14533":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:7782:14204":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:16098:18861":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"20:4297:2212":{"crate_id":20,"path":["magnus","value","ReprValue"],"kind":"trait"},"2:16331:27874":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"6:4861:12782":{"crate_id":6,"path":["libc","unix","bsd","apple","vm_statistics64"],"kind":"struct"},"2:11033:8855":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:51948:5751":{"crate_id":2,"path":["core","core_arch","aarch64","neon","float64x1x3_t"],"kind":"struct"},"2:9001:4603":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:10067:14269":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"6:1036:10372":{"crate_id":6,"path":["libc","unix","bsd","sockaddr"],"kind":"struct"},"2:13311:3087":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"21:4504:21404":{"crate_id":21,"path":["rb_sys","bindings","internal","rb_matchext_struct"],"kind":"struct"},"2:33477:9229":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:1541:3024":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:11958:14452":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"16:2472:13198":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:9967:212":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"16:5363:14113":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:4340:8961":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"3:223:232":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"16:4889:13855":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"20:970:19106":{"crate_id":20,"path":["magnus","fiber","Storage"],"kind":"enum"},"16:7015:14178":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:11482:793":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"15:0:1974":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:4208:12727":{"crate_id":6,"path":["libc","unix","bsd","apple","arphdr"],"kind":"struct"},"6:611:9984":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:38411:9363":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:34200:8980":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:44830:5717":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int32x4x4_t"],"kind":"struct"},"11:2352:4342":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"17:14156:17903":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:11755:14490":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:10593:3131":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:34702:9181":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:45708:4720":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"20:7995:2612":{"crate_id":20,"path":["magnus","value","Opaque"],"kind":"struct"},"6:4595:12761":{"crate_id":6,"path":["libc","unix","bsd","apple","ifconf"],"kind":"struct"},"7:30:12955":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:7723:4327":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"1:6432:3110":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:16957:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"6:5192:12932":{"crate_id":6,"path":["libc","unix","bsd","apple","b64","aarch64","align","ucontext_t"],"kind":"struct"},"2:1815:1187":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:14373:17918":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:8828:23141":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"11:2536:31603":{"crate_id":11,"path":["hashbrown","raw","neon","Group"],"kind":"struct"},"21:3555:21369":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_trace_arg_struct"],"kind":"struct"},"17:11369:14382":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"6:4912:12786":{"crate_id":6,"path":["libc","unix","bsd","apple","sockaddr_vm"],"kind":"struct"},"20:8032:2615":{"crate_id":20,"path":["magnus","value","Qtrue"],"kind":"struct"},"6:4166:12722":{"crate_id":6,"path":["libc","unix","bsd","apple","sockaddr_ctl"],"kind":"struct"},"2:16926:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:415:181":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:44223:5661":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int64x1_t"],"kind":"struct"},"16:7660:14198":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"20:3908:2854":{"crate_id":20,"path":["magnus","typed_data","DataTypeFunctions","mark"],"kind":"foreign_type"},"16:5384:14114":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:36798:27691":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:9969:8805":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"21:4307:21401":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_io_buffer_endian"],"kind":"enum"},"2:37510:8841":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"11:710:4333":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:14896:18643":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:1406:152":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:4455:8947":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"16:6600:14164":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:859:2739":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"18:113:18880":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"5:1270:4340":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:11490:1246":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:4390:12748":{"crate_id":6,"path":["libc","unix","bsd","apple","vm_statistics"],"kind":"struct"},"6:506:9970":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:3032:9211":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"11:2231:13101":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"1:9075:4393":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:44231:5662":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint64x1_t"],"kind":"struct"},"2:37520:8842":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:7979:4437":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:12477:4621":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"5:3230:29319":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:8816:23119":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"11:1107:13106":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:9651:14291":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:5574:14117":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:11481:797":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:9939:25760":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:45477:4748":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:44412:5675":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly64x2_t"],"kind":"struct"},"1:3489:22934":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:1063:4342":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:14976:28524":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"21:4482:2188":{"crate_id":21,"path":["rb_sys","bindings","internal","RArray"],"kind":"struct"},"2:38415:9362":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:16134:18864":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"6:5228:12936":{"crate_id":6,"path":["libc","unix","bsd","apple","b64","aarch64","align","__darwin_arm_neon_state64"],"kind":"struct"},"2:38403:9358":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"0:49:1831":{"crate_id":0,"path":["ext","SomeEnum","_A"],"kind":"variant"},"2:44760:5710":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly16x8x3_t"],"kind":"struct"},"15:288:13140":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"21:3295:21358":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RArray__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"17:12921:14280":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:13419:17391":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:37838:8881":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:15995:9238":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"16:5712:14125":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"21:4122:21390":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_memory_view_t__bindgen_ty_1"],"kind":"struct"},"17:11345:14384":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"18:481:32892":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:1785:9138":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:46100:4783":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:44118:5653":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int8x8_t"],"kind":"struct"},"2:16095:4832":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:8154:4549":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:16004:18854":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"20:3423:19279":{"crate_id":20,"path":["magnus","scan_args","ScanArgsRequired"],"kind":"trait"},"7:0:1686":{"crate_id":7,"path":["unwind"],"kind":"module"},"18:387:18901":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:35916:2739":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:10171:2202":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"6:5178:12929":{"crate_id":6,"path":["libc","unix","bsd","apple","b64","aarch64","malloc_zone_t"],"kind":"struct"},"2:37482:8840":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"21:95:33853":{"crate_id":21,"path":["rb_sys","stable_api","rust","Definition"],"kind":"struct"},"2:46275:27729":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"16:7492:14186":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:1821:4394":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:46952:4717":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:10308:23302":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"21:4268:21400":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_io_buffer_flags"],"kind":"enum"},"18:462:27673":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"18:546:18894":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:2670:13206":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"16:7597:32072":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:13202:17376":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:1477:4330":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:11488:848":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:2574:13202":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:12850:14320":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:26180:27019":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:15527:18689":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:6929:14174":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:14001:17895":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"20:7412:33085":{"crate_id":20,"path":["magnus","r_struct","sys","As"],"kind":"union"},"16:4862:13852":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:3830:13252":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:44820:5716":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int32x4x3_t"],"kind":"struct"},"20:3039:19234":{"crate_id":20,"path":["magnus","r_string","Codepoints"],"kind":"struct"},"17:12091:14532":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:11483:1641":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"6:586:9980":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:4873:23096":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:2504:13199":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:8072:14210":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"20:1080:19117":{"crate_id":20,"path":["magnus","gc","private","Locate"],"kind":"trait"},"2:11560:8845":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:2948:115":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"16:7613:14195":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:5743:14127":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:8901:240":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"21:3486:2200":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RTypedData"],"kind":"struct"},"16:6467:14156":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:7485:4289":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:15192:18663":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"11:2562:31599":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"11:742:4334":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:2406:13195":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:38119:8897":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:12264:14538":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:3091:9222":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:4269:12733":{"crate_id":6,"path":["libc","unix","bsd","apple","thread_standard_policy"],"kind":"struct"},"1:1550:4344":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"21:3564:21370":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_event_hook_flag_t"],"kind":"enum"},"1:2205:3062":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"20:3389:19281":{"crate_id":20,"path":["magnus","scan_args","private","ScanArgsSplat"],"kind":"trait"},"21:0:2109":{"crate_id":21,"path":["rb_sys"],"kind":"module"},"1:11465:1033":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:12166:14504":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:46802:4784":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:3484:8792":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"18:436:18904":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"5:3581:179":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:7717:125":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:6958:22847":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:33671:24016":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"21:3380:21363":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RObject__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"14:31:13116":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"20:8100:27834":{"crate_id":20,"path":["magnus","value","fmt","uninit"],"kind":"struct"},"16:6901:14172":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:6226:14141":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"5:1455:2739":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:44790:5713":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int32x2x3_t"],"kind":"struct"},"2:46502:4763":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:1692:3030":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"16:7694:14199":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"21:3633:21372":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","OnigMetaCharTableType"],"kind":"struct"},"16:8281:14219":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"5:2973:30354":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:44950:5729":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","float32x4x4_t"],"kind":"struct"},"2:16444:27728":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"16:3655:13226":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:5000:28268":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:34340:8830":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"16:4462:13740":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"6:4900:12784":{"crate_id":6,"path":["libc","unix","bsd","apple","log2phys"],"kind":"struct"},"1:9757:23118":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:7436:14183":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:1534:4328":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:13407:17390":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:849:4329":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"11:832:4332":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"6:3720:12687":{"crate_id":6,"path":["libc","unix","bsd","apple","pthread_condattr_t"],"kind":"struct"},"5:2979:29279":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"16:5673:14123":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:13742:17878":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:10954:8851":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:13322:17384":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:7828:22998":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:4710:12769":{"crate_id":6,"path":["libc","unix","bsd","apple","sockaddr_storage"],"kind":"struct"},"20:7388:19229":{"crate_id":20,"path":["magnus","r_regexp","Opts"],"kind":"struct"},"2:34958:9157":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"20:7382:2197":{"crate_id":20,"path":["magnus","r_regexp","RRegexp"],"kind":"struct"},"6:5239:12938":{"crate_id":6,"path":["libc","unix","bsd","apple","long_array","ctl_info"],"kind":"struct"},"1:10312:4431":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:10618:32652":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:3001:9190":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:17557:242":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:16087:18860":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"17:10471:32377":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:4460:8948":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"20:3919:2380":{"crate_id":20,"path":["magnus","typed_data","DataTypeBuilder"],"kind":"struct"},"5:3687:3001":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:5612:14119":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"16:7722:14201":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"16:5696:14124":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:16180:17384":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"2:3048:9213":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"11:2469:3044":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2:1906:9248":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:8644:4636":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:11114:23165":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:939:4337":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:45051:5739":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint64x2x2_t"],"kind":"struct"},"17:10667:32300":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"20:1801:2186":{"crate_id":20,"path":["magnus","numeric","Numeric"],"kind":"trait"},"2:12517:8866":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"20:1105:19117":{"crate_id":20,"path":["magnus","gc","Locate"],"kind":"trait"},"2:46122:4789":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:4641:3097":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:2958:2618":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"5:4050:3001":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:44730:5707":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly16x4x3_t"],"kind":"struct"},"17:11041:14308":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"20:484:18982":{"crate_id":20,"path":["magnus","encoding","RbEncoding"],"kind":"struct"},"21:2730:21338":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","_bindgen_ty_5"],"kind":"union"},"2:36814:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:7832:9159":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:45130:5747":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly64x2x4_t"],"kind":"struct"},"2:1883:9249":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:4444:4580":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:15311:18675":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:7006:14177":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:8761:4653":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"5:6842:3042":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:44520:5686":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint8x16x3_t"],"kind":"struct"},"17:15133:18659":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:3918:12705":{"crate_id":6,"path":["libc","unix","bsd","apple","rt_msghdr"],"kind":"struct"},"1:7466:4300":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:15557:18692":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:9968:14298":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:11497:14433":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:8780:113":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:34552:9180":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:1562:4346":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:44394:5673":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int64x2_t"],"kind":"struct"},"2:33445:4319":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:945:4338":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"6:4589:12760":{"crate_id":6,"path":["libc","unix","bsd","apple","vol_attributes_attr_t"],"kind":"struct"},"9:177:13089":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:10852:14328":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:8871:23202":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"1:1966:204":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:12537:8863":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:44800:5714":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int32x2x4_t"],"kind":"struct"},"2:16315:27845":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:13056:14591":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:35466:4511":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:38707:8779":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:44185:5657":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly16x4_t"],"kind":"struct"},"16:5995:14136":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:38435:9360":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:15184:18662":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"6:3934:12706":{"crate_id":6,"path":["libc","unix","bsd","apple","rt_msghdr2"],"kind":"struct"},"20:4941:19027":{"crate_id":20,"path":["magnus","error","OpaqueError"],"kind":"struct"},"1:918:4334":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:11088:14343":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:1068:10375":{"crate_id":6,"path":["libc","unix","bsd","ifaddrs"],"kind":"struct"},"20:7364:2194":{"crate_id":20,"path":["magnus","r_match","RMatch"],"kind":"struct"},"17:12345:14531":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:14170:17904":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:11126:14337":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:24129:4524":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:11727:14468":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"20:1435:2665":{"crate_id":20,"path":["magnus","method","ReturnValue"],"kind":"trait"},"17:15160:18660":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:35908:4329":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:401:14289":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:51969:5753":{"crate_id":2,"path":["core","core_arch","aarch64","neon","float64x2x2_t"],"kind":"struct"},"2:15:2086":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:7539:4311":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:11485:14403":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"5:4092:4329":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:12273:14319":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:7402:3115":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"11:299:31591":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:44931:5727":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","float32x4x2_t"],"kind":"struct"},"6:5168:12927":{"crate_id":6,"path":["libc","unix","bsd","apple","b64","pthread_attr_t"],"kind":"struct"},"2:44940:5728":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","float32x4x3_t"],"kind":"struct"},"17:13663:17875":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"3:0:478":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:2998:112":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"20:3411:19283":{"crate_id":20,"path":["magnus","scan_args","private","ScanArgsBlock"],"kind":"trait"},"1:4904:23096":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:11256:14380":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"20:3768:2204":{"crate_id":20,"path":["magnus","try_convert","TryConvert"],"kind":"trait"},"2:44871:5721":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint32x4x2_t"],"kind":"struct"},"2:3074:9218":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:36262:85":{"crate_id":2,"path":["core","sync","atomic","AtomicI128"],"kind":"struct"},"1:10962:3137":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"11:490:150":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:11226:14395":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:34909:9152":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"20:8038:2616":{"crate_id":20,"path":["magnus","value","Qundef"],"kind":"struct"},"2:24590:27813":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:15010:28535":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:15321:18676":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:44740:5708":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly16x4x4_t"],"kind":"struct"},"2:24398:9202":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"6:3901:12704":{"crate_id":6,"path":["libc","unix","bsd","apple","rt_metrics"],"kind":"struct"},"2:4177:28126":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"5:634:29324":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:8616:4634":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:1094:14344":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:7298:9168":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"18:393:18898":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"20:8083:2611":{"crate_id":20,"path":["magnus","value","OpaqueId"],"kind":"struct"},"11:1160:4343":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"20:1423:2660":{"crate_id":20,"path":["magnus","method","private","BlockReturn"],"kind":"trait"},"17:14413:17921":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"21:2698:9972":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","timeval"],"kind":"struct"},"17:13989:17894":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:8059:4510":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:621:4304":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:15680:18700":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:2943:2281":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"5:1301:4341":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:12259:9372":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:12058:9326":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"17:14765:18636":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:44901:5724":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","float32x2x2_t"],"kind":"struct"},"20:4807:2172":{"crate_id":20,"path":["magnus","class","RClass"],"kind":"struct"},"2:37282:8833":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"16:6156:14139":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:5648:14121":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"5:2256:30327":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:7421:3117":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:7192:2747":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:10321:3073":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"6:4239:12731":{"crate_id":6,"path":["libc","unix","bsd","apple","timex"],"kind":"struct"},"17:0:1976":{"crate_id":17,"path":["object"],"kind":"module"},"2:3568:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:11113:14338":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:17081:186":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"21:4097:21389":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_memory_view_t"],"kind":"struct"},"16:4557:13763":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"11:774:4330":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:11464:401":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:11486:1640":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:4738:12771":{"crate_id":6,"path":["libc","unix","bsd","apple","sigevent"],"kind":"struct"},"1:951:4339":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:836:4328":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"21:3002:2651":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","ruby_fl_type"],"kind":"enum"},"11:1142:13107":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:44781:5712":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int32x2x2_t"],"kind":"struct"},"1:10030:4633":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:6560:2987":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"18:516:18891":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:5793:3105":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"20:4813:13191":{"crate_id":20,"path":["magnus","encoding","Encoding"],"kind":"struct"},"20:4801:2656":{"crate_id":20,"path":["magnus","block","Proc"],"kind":"struct"},"2:9611:28149":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"5:5392:8825":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:3811:2739":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:7391:14182":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:10736:23382":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:46738:4728":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:38184:8899":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"11:2304:4340":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"17:12140:14506":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:10716:14309":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:45030:5737":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint64x1x3_t"],"kind":"struct"},"2:34925:9154":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:1144:1100":{"crate_id":6,"path":["libc","unix","bsd","option"],"kind":"struct"},"1:11469:1150":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:15432:18684":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:12784:14317":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:6792:14168":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:10639:4634":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"20:3435:19283":{"crate_id":20,"path":["magnus","scan_args","ScanArgsBlock"],"kind":"trait"},"5:3196:29344":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:5809:226":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"11:1603:13110":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"20:7119:2188":{"crate_id":20,"path":["magnus","r_array","RArray"],"kind":"struct"},"17:13648:17874":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:8668:2739":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:16489:27645":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:45523:4713":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:13856:17884":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"21:2864:21344":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_io_wait_readwrite"],"kind":"enum"},"2:10750:4328":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:15659:18698":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:36184:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:24358:4356":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"16:6243:14142":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"11:2140:4341":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"21:2885:2653":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","ruby_value_type"],"kind":"enum"},"2:35788:2739":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:44440:5678":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int8x8x4_t"],"kind":"struct"},"1:11466:451":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:34522:9178":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:8738:4668":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:34538:9179":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"6:4794:12778":{"crate_id":6,"path":["libc","unix","bsd","apple","thread_identifier_info"],"kind":"struct"},"21:4187:21395":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_random_interface_t"],"kind":"struct"},"1:10755:158":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"2:44430:5677":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int8x8x3_t"],"kind":"struct"},"16:6376:14150":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:16062:18858":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"16:2969:13218":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:10432:32802":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:11657:14440":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2:45678:4714":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"11:2443:3024":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"20:3906:2166":{"crate_id":20,"path":["magnus","typed_data","DataTypeFunctions"],"kind":"trait"},"17:15279:18671":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:5017:13887":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:44620:5696":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int16x4x4_t"],"kind":"struct"},"17:13922:17889":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:0:1528":{"crate_id":1,"path":["std"],"kind":"module"},"1:11472:1536":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:10799:4476":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"20:1322:2182":{"crate_id":20,"path":["magnus","into_value","RArrayArgList"],"kind":"trait"},"11:1087:31604":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:2766:13210":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:34931:4500":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:15493:18686":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"20:4768:1804":{"crate_id":20,"path":["magnus","define_module"],"kind":"function"},"2:34193:8979":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"5:2983:29280":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:34438:27597":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"21:3308:21360":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","ruby_rmodule_flags"],"kind":"enum"},"17:9860:14296":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:14251:17910":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:4335:12743":{"crate_id":6,"path":["libc","unix","bsd","apple","sched_param"],"kind":"struct"},"21:3532:21367":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_fdset_t"],"kind":"struct"},"2:36342:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:4036:4539":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:12127:14507":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"20:3522:2661":{"crate_id":20,"path":["magnus","symbol","IntoSymbol"],"kind":"trait"},"2:1778:634":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:588:4301":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:38248:8901":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"6:1415:10519":{"crate_id":6,"path":["libc","unix","bsd","apple","sysdir_search_path_domain_mask_t"],"kind":"enum"},"17:16076:18859":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"1:2352:4417":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:35780:4329":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:35691:4516":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:4587:4551":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:7665:4434":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"21:3403:2197":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RRegexp"],"kind":"struct"},"17:15049:18651":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:8102:4519":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"21:4354:21403":{"crate_id":21,"path":["rb_sys","bindings","unstable","rb_io_internal_buffer"],"kind":"struct"},"16:3232:13222":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:2492:131":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"20:3385:19280":{"crate_id":20,"path":["magnus","scan_args","private","ScanArgsOpt"],"kind":"trait"},"2:15903:4837":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"21:3516:21366":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_arithmetic_sequence_components_t"],"kind":"struct"},"2:46146:4790":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"5:1387:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"6:4092:12716":{"crate_id":6,"path":["libc","unix","bsd","apple","mach_header_64"],"kind":"struct"},"17:15244:18668":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:7362:27894":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"5:3251:4347":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"6:600:9982":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"20:4870:4371":{"crate_id":20,"path":["magnus","encoding","Index"],"kind":"struct"},"17:12052:14454":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"5:7338:216":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:11102:8775":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:3160:26385":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"11:1896:3044":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"17:11027:14339":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:16160:18866":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"6:3821:12697":{"crate_id":6,"path":["libc","unix","bsd","apple","sockaddr_in"],"kind":"struct"},"5:886:3009":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:11128:13149":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:4040:4540":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:10132:4491":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:11215:14369":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:34072:4302":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"21:3270:21356":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","ruby_rarray_consts"],"kind":"enum"},"2:24426:27670":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"17:12310:14530":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"6:1152:4557":{"crate_id":6,"path":["libc","unix","bsd","sockaddr_un"],"kind":"struct"},"17:15689:18701":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:36223:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:36841:134":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:34078:8945":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"5:6861:3054":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"20:7982:2169":{"crate_id":20,"path":["magnus","value","flonum","Flonum"],"kind":"struct"},"17:11449:14430":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:12432:14551":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"16:2450:13197":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:1085:10377":{"crate_id":6,"path":["libc","unix","bsd","tm"],"kind":"struct"},"17:12953:14277":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:47658:4735":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:2701:159":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:16049:9238":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"16:3600:13225":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"16:8167:14215":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:10962:14351":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:13809:17882":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:44640:5698":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int16x8x3_t"],"kind":"struct"},"2:13131:28112":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:45100:5744":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly64x1x4_t"],"kind":"struct"},"20:7087:182":{"crate_id":20,"path":["magnus","mutex","Mutex"],"kind":"struct"},"6:1079:10376":{"crate_id":6,"path":["libc","unix","bsd","fd_set"],"kind":"struct"},"2:44481:5682":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint8x8x2_t"],"kind":"struct"},"6:4274:12734":{"crate_id":6,"path":["libc","unix","bsd","apple","thread_extended_policy"],"kind":"struct"},"5:7346:29277":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:11473:1622":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:11523:14406":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"20:7427:2199":{"crate_id":20,"path":["magnus","r_struct","RStruct"],"kind":"struct"},"2:37658:8873":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:3498:4440":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"11:2124:4340":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:38495:9379":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:51930:5749":{"crate_id":2,"path":["core","core_arch","aarch64","neon","float64x2_t"],"kind":"struct"},"5:786:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:6268:31875":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:44361:5670":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int32x4_t"],"kind":"struct"},"17:12474:14308":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"20:3770:2662":{"crate_id":20,"path":["magnus","try_convert","TryConvertOwned"],"kind":"trait"},"20:7400:19236":{"crate_id":20,"path":["magnus","r_string","FString"],"kind":"struct"},"2:44500:5684":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint8x8x4_t"],"kind":"struct"},"6:3784:12694":{"crate_id":6,"path":["libc","unix","bsd","apple","fspecread_t"],"kind":"struct"},"21:3349:21361":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","ruby_robject_flags"],"kind":"enum"},"2:34167:8877":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:13961:17892":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:46692:4722":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"21:2665:4589":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","stat"],"kind":"struct"},"2:4635:8957":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"5:7422:4325":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:14426:17922":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:34174:8977":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"17:3251:14450":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:35849:4292":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"18:537:18893":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:14399:17920":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"20:1363:2209":{"crate_id":20,"path":["magnus","method","private","Method"],"kind":"trait"},"2:7869:162":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"21:4475:2198":{"crate_id":21,"path":["rb_sys","bindings","internal","RString"],"kind":"struct"},"18:486:32886":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:8054:4518":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:3203:139":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:5237:4628":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"5:0:313":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:44670:5701":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint16x4x3_t"],"kind":"struct"},"2:12072:8870":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:4950:210":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:11426:14429":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"5:281:2286":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"5:4252:4328":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:44331:5668":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint16x8_t"],"kind":"struct"},"21:3682:21374":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","OnigSyntaxType"],"kind":"struct"},"5:1024:3001":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"5:7559:8907":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:10891:22855":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"21:3699:21375":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","re_registers"],"kind":"struct"},"18:361:18899":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:9559:14267":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:35672:4515":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"5:2236:30659":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:4524:3066":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:34238:2825":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:10168:149":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"16:5939:14133":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:34481:9175":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"20:3685:3143":{"crate_id":20,"path":["magnus","thread","wrap_closure","Closure"],"kind":"struct"},"17:11469:14432":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"6:4312:12741":{"crate_id":6,"path":["libc","unix","bsd","apple","malloc_statistics_t"],"kind":"struct"},"1:6848:3113":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:16833:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:4588:8956":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:37557:8830":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"20:2130:19178":{"crate_id":20,"path":["magnus","r_array","TypedArray"],"kind":"struct"},"5:3217:4346":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:15008:28531":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:10365:4437":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:44316:5667":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int16x8_t"],"kind":"struct"},"1:1796:4387":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:3835:4522":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"20:1300:2181":{"crate_id":20,"path":["magnus","into_value","KwArgs"],"kind":"struct"},"2:36823:8796":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:1969:203":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:15961:17375":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"5:5388:8824":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:7362:23088":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"20:4023:2806":{"crate_id":20,"path":["magnus","typed_data","Dup"],"kind":"trait"},"1:4558:4588":{"crate_id":1,"path":["std","os","macos","fs","FileTimesExt"],"kind":"trait"},"6:4551:12755":{"crate_id":6,"path":["libc","unix","bsd","apple","image_offset"],"kind":"struct"},"1:8660:4669":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:9961:8799":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"21:4459:21403":{"crate_id":21,"path":["rb_sys","bindings","stable","rb_io_internal_buffer"],"kind":"struct"},"1:10455:3128":{"crate_id":1,"path":["std","sys","unix","locks","pthread_condvar","AllocatedCondvar"],"kind":"struct"},"2:34369:4473":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:13896:17887":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:34233:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:10358:125":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"11:2554:31602":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:37952:8880":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:15003:18647":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:13684:14493":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:3584:14473":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:595:2201":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:15990:18853":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"6:3890:12703":{"crate_id":6,"path":["libc","unix","bsd","apple","ifma_msghdr2"],"kind":"struct"},"17:11412:14375":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:10864:22950":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"21:4430:21404":{"crate_id":21,"path":["rb_sys","bindings","stable","rb_matchext_struct"],"kind":"struct"},"16:6721:14166":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:10699:9378":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:5844:9173":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:36539:8808":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"20:1078:19115":{"crate_id":20,"path":["magnus","gc","private","Mark"],"kind":"trait"},"21:3793:21379":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","OnigCompileInfo"],"kind":"struct"},"17:15200:18664":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"20:7113:19175":{"crate_id":20,"path":["magnus","process","Flags"],"kind":"struct"},"1:4664:4547":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:4601:12520":{"crate_id":6,"path":["libc","unix","bsd","apple","kevent"],"kind":"struct"},"2:2830:4412":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"5:266:3001":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:12333:8857":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:9959:8800":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:7677:4435":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:35613:27700":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"11:1007:4340":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"11:328:31597":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:12758:14316":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"11:1051:4342":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:13436:17392":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:15645:18697":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"16:2321:13191":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"18:446:32877":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:5830:14130":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"6:4222:12729":{"crate_id":6,"path":["libc","unix","bsd","apple","sockaddr_ndrv"],"kind":"struct"},"5:5961:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:909:4332":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:47696:4770":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:4972:419":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:3232:4371":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:16398:27885":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:10897:22865":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:12387:14544":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:2426:1984":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:7833:4487":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:37738:8886":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:7960:2284":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"16:6485:14157":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:637:4306":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:11168:14367":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"20:4919:19026":{"crate_id":20,"path":["magnus","error","ErrorType"],"kind":"enum"},"2:45647:4767":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"19:0:1130":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"11:1891:3024":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:4184:12724":{"crate_id":6,"path":["libc","unix","bsd","apple","in6_pktinfo"],"kind":"struct"},"1:6365:4658":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"20:4906:2173":{"crate_id":20,"path":["magnus","enumerator","Enumerator"],"kind":"struct"},"16:4806:13844":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:2305:13190":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"17:15294:18673":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"21:3874:21382":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_econv_t"],"kind":"struct"},"9:330:13040":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:13724:17877":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"18:496:32876":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"5:903:4328":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:15620:4709":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"11:364:2990":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"9:486:12983":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:6575:3069":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2:51922:5748":{"crate_id":2,"path":["core","core_arch","aarch64","neon","float64x1_t"],"kind":"struct"},"2:34115:8981":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:14497:17926":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:3402:260":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"0:0:1850":{"crate_id":0,"path":["ext"],"kind":"module"},"1:8836:14180":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:45000:5734":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int64x2x3_t"],"kind":"struct"},"2:37688:4476":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:15235:18667":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:8205:4614":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:8110:4561":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:7560:4396":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:7728:2807":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"6:5209:12934":{"crate_id":6,"path":["libc","unix","bsd","apple","b64","aarch64","align","__darwin_arm_exception_state64"],"kind":"struct"},"1:10849:22952":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"6:1100:10378":{"crate_id":6,"path":["libc","unix","bsd","msghdr"],"kind":"struct"},"17:13448:17393":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"21:2984:21345":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","ruby_fl_ushift"],"kind":"enum"},"5:7434:4326":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:5647:3098":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"21:3615:21371":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","OnigCaseFoldCodeItem"],"kind":"struct"},"16:6456:14155":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"16:4774:13836":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:10816:3134":{"crate_id":1,"path":["std","sys_common","once","queue","WaiterQueue"],"kind":"struct"},"2:7584:4499":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"20:3402:19282":{"crate_id":20,"path":["magnus","scan_args","private","ScanArgsKw"],"kind":"trait"},"1:3733:4520":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:8029:4475":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"6:4624:12763":{"crate_id":6,"path":["libc","unix","bsd","apple","shmid_ds"],"kind":"struct"},"5:3738:4359":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:14822:18639":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"16:2380:13194":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:11025:4520":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:37023:4449":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:4177:12723":{"crate_id":6,"path":["libc","unix","bsd","apple","in_pktinfo"],"kind":"struct"},"5:1439:4329":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"22:0:2110":{"crate_id":22,"path":["seq_macro"],"kind":"module"},"10:44:13094":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"17:15287:18672":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:5202:12933":{"crate_id":6,"path":["libc","unix","bsd","apple","b64","aarch64","align","__darwin_mcontext64"],"kind":"struct"},"21:3373:21362":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RObject__bindgen_ty_1"],"kind":"union"},"1:7465:4442":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:12510:14554":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"21:3119:19266":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","ruby_rstring_flags"],"kind":"enum"},"1:7660:4433":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:4297:12738":{"crate_id":6,"path":["libc","unix","bsd","apple","thread_background_policy"],"kind":"struct"},"16:7318:14181":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:15657:28528":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:2704:141":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:38614:233":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:7511:2202":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:37996:4302":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:11075:8854":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:3754:12690":{"crate_id":6,"path":["libc","unix","bsd","apple","stack_t"],"kind":"struct"},"17:11395:14389":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"16:5905:14132":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"6:4934:12789":{"crate_id":6,"path":["libc","unix","bsd","apple","ifkpi"],"kind":"struct"},"16:2722:13208":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:9000:4314":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:14145:17902":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:1054:10374":{"crate_id":6,"path":["libc","unix","bsd","passwd"],"kind":"struct"},"20:7352:2192":{"crate_id":20,"path":["magnus","r_float","RFloat"],"kind":"struct"},"17:11991:14449":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:11576:14435":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:11121:13149":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"20:4934:134":{"crate_id":20,"path":["magnus","error","Error"],"kind":"struct"},"2:45577:4749":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:16016:18855":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"2:44850:5719":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint32x2x3_t"],"kind":"struct"},"11:844:4336":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:15164:4442":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"21:159:21436":{"crate_id":21,"path":["rb_sys","tracking_allocator","ManuallyTracked"],"kind":"struct"},"5:1505:4333":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:15062:18652":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:1902:4408":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:15356:18680":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:10842:4640":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:0:533":{"crate_id":2,"path":["core"],"kind":"module"},"2:44880:5722":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint32x4x3_t"],"kind":"struct"},"1:11477:693":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"20:2178:4328":{"crate_id":20,"path":["magnus","r_array","Iter"],"kind":"struct"},"1:3480:4409":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"16:2832:13213":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:13676:14495":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:1054:4341":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:11471:1503":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:13334:17385":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:514:9971":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:7828:9160":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:11593:8846":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:45060:5740":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint64x2x3_t"],"kind":"struct"},"2:44970:5731":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int64x1x3_t"],"kind":"struct"},"6:3979:12709":{"crate_id":6,"path":["libc","unix","bsd","apple","lconv"],"kind":"struct"},"2:34400:9169":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"20:4018:2805":{"crate_id":20,"path":["magnus","typed_data","Inspect"],"kind":"trait"},"17:15980:18852":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"17:12202:14536":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"16:6041:14138":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:8706:4667":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:4508:4537":{"crate_id":1,"path":["std","os","macos","fs","MetadataExt"],"kind":"trait"},"17:14324:17915":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:6915:14173":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:12220:14320":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:44196:5658":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int32x2_t"],"kind":"struct"},"6:4975:12793":{"crate_id":6,"path":["libc","unix","bsd","apple","semun"],"kind":"union"},"2:15858:4836":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"17:14359:17917":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:14057:17898":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:3069:9217":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"20:8050:2207":{"crate_id":20,"path":["magnus","value","StaticSymbol"],"kind":"struct"},"12:0:1972":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"20:1441:2660":{"crate_id":20,"path":["magnus","method","BlockReturn"],"kind":"trait"},"5:7267:3871":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"13:102:31632":{"crate_id":13,"path":["std_detect","detect","arch","aarch64","Feature"],"kind":"enum"},"2:3036:4696":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"16:4719:13829":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:11321:14308":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:4366:4563":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:7768:14203":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:3770:12692":{"crate_id":6,"path":["libc","unix","bsd","apple","fpunchhole_t"],"kind":"struct"},"2:35529:27682":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"2:2707:264":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:45730:4726":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:37942:4472":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:11243:14381":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:35500:4513":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:13383:17388":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"20:287:2171":{"crate_id":20,"path":["magnus","class","Class"],"kind":"trait"},"1:8998:26135":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:10559:14306":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"5:4381:3033":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:9813:14295":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"11:2369:13111":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:16895:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:13365:17387":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:3169:123":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:3764:13234":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:10576:3129":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"5:5154:3039":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"5:7481:27723":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:6753:14167":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"21:3466:2812":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_data_type_struct__bindgen_ty_1"],"kind":"struct"},"17:14221:17908":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:10484:4397":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"16:6361:14149":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:4368:12745":{"crate_id":6,"path":["libc","unix","bsd","apple","vnode_info"],"kind":"struct"},"1:6252:4654":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:10726:32533":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"9:426:12986":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:44163:5655":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int16x4_t"],"kind":"struct"},"1:2368:4422":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:7582:14194":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:44691:5703":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint16x8x2_t"],"kind":"struct"},"17:12701:14275":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:6380:9184":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:3622:12680":{"crate_id":6,"path":["libc","unix","bsd","apple","ip_mreq"],"kind":"struct"},"17:14485:14280":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:4979:2836":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:435:13165":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"11:2548:31594":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:13254:17379":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:16109:18862":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"16:5661:14122":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"21:3811:21380":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","ruby_encoding_consts"],"kind":"enum"},"17:11294:14379":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"21:3651:21373":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","OnigEncodingTypeST"],"kind":"struct"},"17:12459:14347":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:34382:9161":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"6:3831:12698":{"crate_id":6,"path":["libc","unix","bsd","apple","kevent64_s"],"kind":"struct"},"1:9588:23214":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"20:985:3143":{"crate_id":20,"path":["magnus","fiber","wrap_closure","Closure"],"kind":"struct"},"14:215:13125":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:36381:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"20:4988:2168":{"crate_id":20,"path":["magnus","fiber","Fiber"],"kind":"struct"},"17:10974:14347":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"18:616:18890":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:9952:117":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"6:594:9981":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:7959:4499":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:10881:14329":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"5:4411:3030":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:6633:4700":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:10176:153":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:2197:14377":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"21:3502:21365":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rbimpl_size_mul_overflow_tag"],"kind":"struct"},"1:11484:1638":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:45040:5738":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint64x1x4_t"],"kind":"struct"},"13:0:1966":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:6071:3105":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:2993:2282":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:12410:14545":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:13404:4349":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:35649:4514":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:15868:18850":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"20:1565:1805":{"crate_id":20,"path":["magnus","function"],"kind":"macro"},"2:34902:27821":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"17:511:14290":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"20:4982:2175":{"crate_id":20,"path":["magnus","exception","ExceptionClass"],"kind":"struct"},"21:2831:21343":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_warning_category_t"],"kind":"enum"},"17:14455:17924":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"0:68:1835":{"crate_id":0,"path":["ext","OriginalName"],"kind":"struct"},"17:15037:18650":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:9963:8807":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:4921:13863":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:34940:3071":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:17019:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"21:2718:21336":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","_bindgen_ty_3"],"kind":"union"},"6:4292:12737":{"crate_id":6,"path":["libc","unix","bsd","apple","thread_affinity_policy"],"kind":"struct"},"5:5877:3024":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:35443:167":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:1758:4376":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"16:6204:14140":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:34452:9174":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:533:3090":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:34562:9166":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:44174:5656":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint16x4_t"],"kind":"struct"},"1:922:4335":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"0:48:1830":{"crate_id":0,"path":["ext","SomeEnum"],"kind":"enum"},"1:557:4286":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:5798:14129":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:14194:17906":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:2658:4442":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:11476:13101":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"11:1917:4346":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"20:7099:19174":{"crate_id":20,"path":["magnus","process","WaitTarget"],"kind":"enum"},"2:2946:251":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:4196:4560":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"21:4221:21397":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rmatch_offset"],"kind":"struct"},"17:10355:135":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"2:38439:9378":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:11480:796":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:4817:12780":{"crate_id":6,"path":["libc","unix","bsd","apple","if_data64"],"kind":"struct"},"0:16:1841":{"crate_id":0,"path":["ext","NotClass"],"kind":"struct"},"1:9849:4639":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"17:4928:14561":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"6:558:9976":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:44610:5695":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int16x4x3_t"],"kind":"struct"},"2:45111:5745":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly64x2x2_t"],"kind":"struct"},"21:4207:21396":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_random_interface_t__bindgen_ty_1"],"kind":"struct"},"17:12356:14541":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"20:1415:2666":{"crate_id":20,"path":["magnus","method","private","InitReturn"],"kind":"trait"},"17:11536:14404":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:38458:128":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"11:0:1971":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:44205:5659":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint32x2_t"],"kind":"struct"},"17:13516:17398":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:15966:4442":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:5217:4627":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"6:532:9974":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:10919:8858":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"20:1293:2180":{"crate_id":20,"path":["magnus","into_value","IntoValueFromNative"],"kind":"trait"},"2:36863:8798":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"21:4398:2198":{"crate_id":21,"path":["rb_sys","bindings","stable","RString"],"kind":"struct"},"6:3686:4589":{"crate_id":6,"path":["libc","unix","bsd","apple","stat"],"kind":"struct"},"2:38273:8903":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:33359:218":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:4190:12725":{"crate_id":6,"path":["libc","unix","bsd","apple","ipc_perm"],"kind":"struct"},"2:37583:8847":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"6:3869:12701":{"crate_id":6,"path":["libc","unix","bsd","apple","ifa_msghdr"],"kind":"struct"},"2:10404:3077":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"6:573:9978":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:46456:4757":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"21:3588:19265":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","ruby_coderange_type"],"kind":"enum"},"6:4753:12773":{"crate_id":6,"path":["libc","unix","bsd","apple","processor_basic_info"],"kind":"struct"},"17:12380:14543":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"6:4928:12788":{"crate_id":6,"path":["libc","unix","bsd","apple","__c_anonymous_ifk_data"],"kind":"union"},"6:1111:10379":{"crate_id":6,"path":["libc","unix","bsd","cmsghdr"],"kind":"struct"},"1:8353:4619":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:11439:14396":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:38283:8904":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:26198:8955":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"6:4941:12790":{"crate_id":6,"path":["libc","unix","bsd","apple","__c_anonymous_ifr_ifru"],"kind":"union"},"6:4217:12728":{"crate_id":6,"path":["libc","unix","bsd","apple","in_addr"],"kind":"struct"},"21:3302:21359":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RArray__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],"kind":"union"},"2:45070:5741":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint64x2x4_t"],"kind":"struct"},"17:12548:14548":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"2:16802:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:3508:4467":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"9:450:12984":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:1545:3044":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"20:4223:2597":{"crate_id":20,"path":["magnus","value","InnerValue"],"kind":"trait"},"2:37491:8839":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"5:3225:4344":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:7554:4312":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:37602:8848":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:13882:17886":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:44841:5718":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint32x2x2_t"],"kind":"struct"},"17:12324:14540":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:723:150":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:4801:12779":{"crate_id":6,"path":["libc","unix","bsd","apple","thread_extended_info"],"kind":"struct"},"2:9429:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:14950:18646":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:12077:14520":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:15027:18649":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"18:96:18879":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:11046:4522":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"21:4174:21394":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_random_struct"],"kind":"struct"},"21:4532:21437":{"crate_id":21,"path":["rb_sys","tracking_allocator","TrackingAllocator"],"kind":"struct"},"2:14954:8993":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"20:7358:2193":{"crate_id":20,"path":["magnus","r_hash","RHash"],"kind":"struct"},"6:4637:12764":{"crate_id":6,"path":["libc","unix","bsd","apple","proc_threadinfo"],"kind":"struct"},"1:8278:4616":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"20:1527:1806":{"crate_id":20,"path":["magnus","method"],"kind":"macro"},"16:2696:13207":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:44214:5660":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","float32x2_t"],"kind":"struct"},"16:7651:14197":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:15942:4838":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"16:6893:32081":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"6:3668:12685":{"crate_id":6,"path":["libc","unix","bsd","apple","addrinfo"],"kind":"struct"},"1:6179:182":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:44383:5672":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","float32x4_t"],"kind":"struct"},"21:2799:21342":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","ruby_rvalue_flags"],"kind":"enum"},"1:3730:4521":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:33401:220":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"5:7367:2739":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:15612:18695":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:12244:14503":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:2209:4414":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"21:3744:21378":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","re_pattern_buffer"],"kind":"struct"},"20:7370:2195":{"crate_id":20,"path":["magnus","r_object","RObject"],"kind":"struct"},"5:7284:4348":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:8370:28147":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:34099:27816":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:4776:12776":{"crate_id":6,"path":["libc","unix","bsd","apple","time_value_t"],"kind":"struct"},"1:1873:4407":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:37632:8879":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:14964:28524":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"9:507:12987":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:4431:12751":{"crate_id":6,"path":["libc","unix","bsd","apple","rusage_info_v1"],"kind":"struct"},"2:2778:122":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:2380:4428":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:9756:8797":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"2:4309:8960":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:37980:8867":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:37060:4615":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:4811:8970":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:11767:14491":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:37078:27763":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"6:4307:12740":{"crate_id":6,"path":["libc","unix","bsd","apple","thread_throughput_qos_policy"],"kind":"struct"},"20:4561:2211":{"crate_id":20,"path":["magnus","value","IntoId"],"kind":"trait"},"2:1897:27683":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:14122:17901":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"17:15566:18693":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"14:202:8905":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:6189:32011":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:10126:4493":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"21:2635:10376":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","fd_set"],"kind":"struct"},"20:3946:2679":{"crate_id":20,"path":["magnus","typed_data","TypedData","class_for"],"kind":"foreign_type"},"2:44920:5726":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","float32x2x4_t"],"kind":"struct"},"17:12797:14318":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:4264:4558":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"21:4341:2198":{"crate_id":21,"path":["rb_sys","bindings","unstable","RString"],"kind":"struct"},"17:13145:17373":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:2418:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"6:1124:10312":{"crate_id":6,"path":["libc","unix","bsd","if_nameindex"],"kind":"struct"},"2:44860:5720":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint32x2x4_t"],"kind":"struct"},"2:36301:92":{"crate_id":2,"path":["core","sync","atomic","AtomicU128"],"kind":"struct"},"6:62:9601":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"5:2062:4360":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:13309:17383":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:14312:17914":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:13273:17380":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:15367:18681":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"5:4182:3030":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:46024:4721":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:45433:4747":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"20:0:1803":{"crate_id":20,"path":["magnus"],"kind":"module"},"2:45767:4782":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"5:7375:2739":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"16:8115:14212":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:4105:3030":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:3044:9214":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"6:1339:10518":{"crate_id":6,"path":["libc","unix","bsd","apple","sysdir_search_path_directory_t"],"kind":"enum"},"0:32:1812":{"crate_id":0,"path":["ext","Foo"],"kind":"struct"},"2:3099:9224":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:15347:4703":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"11:673:4328":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"5:6351:4846":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:16510:4526":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:8048:4519":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:11269:14347":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:16129:4831":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"2:2698:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:880:4331":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:11779:14447":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:44991:5733":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int64x2x2_t"],"kind":"struct"},"1:6248:2623":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:11478:798":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:14346:17916":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"11:1883:4328":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:44980:5732":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int64x1x4_t"],"kind":"struct"},"16:6742:13134":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:5403:14115":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"5:4865:223":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"6:564:9977":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"5:2474:30349":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:35900:4328":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:12255:14537":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"5:7467:2823":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"5:1495:4332":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:3441:4438":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"21:4446:21405":{"crate_id":21,"path":["rb_sys","bindings","stable","rb_internal_thread_event_data"],"kind":"struct"},"1:7687:4432":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:11632:14438":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"6:3628:12681":{"crate_id":6,"path":["libc","unix","bsd","apple","ip_mreqn"],"kind":"struct"},"0:85:1842":{"crate_id":0,"path":["ext","init"],"kind":"function"},"16:2618:13204":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:15336:4442":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"5:7330:2739":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:11052:14309":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:44751:5709":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly16x8x2_t"],"kind":"struct"},"2:9927:140":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"6:3843:12699":{"crate_id":6,"path":["libc","unix","bsd","apple","dqblk"],"kind":"struct"},"6:123:9656":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:14087:17899":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"6:4611:12762":{"crate_id":6,"path":["libc","unix","bsd","apple","semid_ds"],"kind":"struct"},"2:12736:117":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:44650:5699":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int16x8x4_t"],"kind":"struct"},"16:4527:13757":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:2093:8793":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"16:7884:14208":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"20:4249:2364":{"crate_id":20,"path":["magnus","value","Lazy"],"kind":"struct"},"17:12009:14308":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:35712:200":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"16:2339:13192":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:10137:14299":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"21:3101:21346":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","_bindgen_ty_9"],"kind":"enum"},"2:9957:126":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:7128:14180":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:47488:4729":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:2440:110":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:5984:3104":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:10606:245":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:36518:8799":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:38136:8898":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"6:3813:12696":{"crate_id":6,"path":["libc","unix","bsd","apple","Dl_info"],"kind":"struct"},"14:0:1973":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:33423:222":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:7202:25467":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"21:3174:21351":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","st_hash_type"],"kind":"struct"},"17:15329:18677":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:16209:27731":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"16:6818:14169":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:11487:1637":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"21:2742:21340":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","_bindgen_ty_7"],"kind":"union"},"1:10836:23093":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:4026:4538":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:4921:12787":{"crate_id":6,"path":["libc","unix","bsd","apple","ifdevmtu"],"kind":"struct"},"2:38604:225":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:4579:3067":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:10383:3123":{"crate_id":1,"path":["std","sys","unix","locks","pthread_mutex","AllocatedMutex"],"kind":"struct"},"17:11194:14368":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"2:45499:4754":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"16:4585:13767":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:26144:4637":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:16035:4842":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"16:2881:13215":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:5634:14120":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"20:1645:2184":{"crate_id":20,"path":["magnus","module","Module"],"kind":"trait"},"21:2724:21337":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","_bindgen_ty_4"],"kind":"union"},"17:14021:17896":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"16:5760:14128":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:14887:18642":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:10608:14307":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:7544:14191":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"16:5419:14116":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"11:434:31605":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:7878:2285":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:44680:5702":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint16x4x4_t"],"kind":"struct"},"6:3761:12691":{"crate_id":6,"path":["libc","unix","bsd","apple","fstore_t"],"kind":"struct"},"17:13948:17891":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:13121:17372":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:45930:4768":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:13584:17872":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"21:3394:21364":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","re_patter_buffer"],"kind":"struct"},"17:15710:18702":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:12335:14280":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:12115:14534":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:14778:18637":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"21:4328:21402":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_id_table"],"kind":"struct"},"20:1083:19115":{"crate_id":20,"path":["magnus","gc","Mark"],"kind":"trait"},"2:44811:5715":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int32x4x2_t"],"kind":"struct"},"5:1424:4328":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:9115:8862":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:8823:23110":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:9909:4409":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"6:4136:12719":{"crate_id":6,"path":["libc","unix","bsd","apple","load_command"],"kind":"struct"},"17:13347:17386":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:4053:13403":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:44710:5705":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint16x8x4_t"],"kind":"struct"},"6:3880:12702":{"crate_id":6,"path":["libc","unix","bsd","apple","ifma_msghdr"],"kind":"struct"},"17:12366:14542":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:12614:14313":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:10802:2623":{"crate_id":1,"path":["std","sys_common","once","queue","Once"],"kind":"struct"},"1:7670:4431":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:44560:5690":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly8x8x4_t"],"kind":"struct"},"17:14921:18644":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:2202:4413":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"23:0:2111":{"crate_id":23,"path":["magnus_macros"],"kind":"module"},"16:7474:14185":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"21:3419:2809":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rbimpl_typeddata_flags"],"kind":"enum"},"2:35857:232":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"5:4366:270":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"16:4986:13880":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:46378:4751":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:37070:27720":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:10941:14333":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:8364:4620":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:8949:4694":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:15631:18696":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:363:4299":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:44541:5688":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly8x8x2_t"],"kind":"struct"},"1:8775:23071":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:37706:8851":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"5:1131:30355":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"16:2548:13201":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:15087:18654":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:3103:9225":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:1556:4345":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"21:2736:21339":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","_bindgen_ty_6"],"kind":"union"},"16:5816:31949":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"6:520:9972":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:4287:12736":{"crate_id":6,"path":["libc","unix","bsd","apple","thread_precedence_policy"],"kind":"struct"},"20:8020:2613":{"crate_id":20,"path":["magnus","value","Qfalse"],"kind":"struct"},"2:9971:8806":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:3010:4697":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"20:3432:19282":{"crate_id":20,"path":["magnus","scan_args","ScanArgsKw"],"kind":"trait"},"4:0:1967":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:10950:14357":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"21:3715:21376":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","OnigErrorInfo"],"kind":"struct"},"2:4608:2617":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:8911:158":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:7700:136":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"21:4165:21393":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_ractor_local_key_struct"],"kind":"struct"},"1:4048:4542":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:15108:18656":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:3276:4491":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:9965:8808":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:44571:5691":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly8x16x2_t"],"kind":"struct"},"2:4383:8820":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"6:1044:10373":{"crate_id":6,"path":["libc","unix","bsd","sockaddr_in6"],"kind":"struct"},"21:4079:21388":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_memory_view_item_component_t"],"kind":"struct"},"16:7621:14196":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:36758:27843":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:51988:5755":{"crate_id":2,"path":["core","core_arch","aarch64","neon","float64x2x4_t"],"kind":"struct"},"17:13832:17883":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:15013:18648":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"5:7296:3024":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:13297:17382":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:15219:4702":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:14470:17925":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:9002:2668":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:6016:23171":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"6:3727:12688":{"crate_id":6,"path":["libc","unix","bsd","apple","pthread_rwlockattr_t"],"kind":"struct"},"17:12153:14505":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:11666:14441":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:45453:4712":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:15725:18703":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"16:3915:13289":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:4497:13751":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:4762:12774":{"crate_id":6,"path":["libc","unix","bsd","apple","processor_set_basic_info"],"kind":"struct"},"20:4003:2803":{"crate_id":20,"path":["magnus","typed_data","IsEql"],"kind":"trait"},"2:46614:4716":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:4124:4559":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:44133:5652":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint8x8_t"],"kind":"struct"},"2:2487:207":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"5:7028:3061":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:2711:263":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:11634:8838":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:13083:14592":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:5892:3100":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:37570:8831":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:37792:8855":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:6805:27066":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"16:5121:13919":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:16347:27822":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"21:3367:2195":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RObject"],"kind":"struct"},"17:12718:14314":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:10510:14305":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:13504:17397":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:34420:9171":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"6:4384:12747":{"crate_id":6,"path":["libc","unix","bsd","apple","proc_vnodepathinfo"],"kind":"struct"},"6:1138:10382":{"crate_id":6,"path":["libc","unix","bsd","regmatch_t"],"kind":"struct"},"17:13976:17893":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:14843:18640":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:37664:8872":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:8693:4664":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:37278:27730":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"21:3152:21349":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RString__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],"kind":"union"},"2:37048:153":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:5322:4630":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"16:8134:14213":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:7523:14189":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:15225:4706":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:2695:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"16:149:2984":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:9891:14271":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"5:7450:2150":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"20:1289:2179":{"crate_id":20,"path":["magnus","into_value","IntoValue"],"kind":"trait"},"17:11645:14439":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"17:12180:14535":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:36106:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:44590:5693":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly8x16x4_t"],"kind":"struct"},"16:2284:13163":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:44451:5679":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int8x16x2_t"],"kind":"struct"},"16:8181:14216":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:34410:9170":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:5187:12931":{"crate_id":6,"path":["libc","unix","bsd","apple","b64","aarch64","align","max_align_t"],"kind":"struct"},"2:3182:2619":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:3057:9219":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:6418:4660":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:33306:9227":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"20:4362:2599":{"crate_id":20,"path":["magnus","value","BoxValue"],"kind":"struct"},"16:8097:14211":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:16864:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"5:5004:3030":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"5:1151:29266":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:35772:4328":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:1317:10517":{"crate_id":6,"path":["libc","unix","bsd","apple","qos_class_t"],"kind":"enum"},"9:52:13003":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"21:3988:21385":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_io_encoding"],"kind":"struct"},"11:856:4337":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:6844:14170":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"11:787:4331":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:22:731":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:1072:4343":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:7865:142":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:13109:161":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:24414:8796":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:46197:27865":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"16:6960:14175":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:3108:9226":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:12596:14312":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:3163:26949":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"18:0:1977":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:37612:8849":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:8022:4474":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"21:3197:21353":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","st_table"],"kind":"struct"},"16:6318:14145":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"6:4415:12750":{"crate_id":6,"path":["libc","unix","bsd","apple","rusage_info_v0"],"kind":"struct"},"17:12445:14550":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"2:38657:4843":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:37971:8868":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:8332:9158":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:9759:14293":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"6:4329:12742":{"crate_id":6,"path":["libc","unix","bsd","apple","vm_range_t"],"kind":"struct"},"1:8035:4476":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"20:7529:2200":{"crate_id":20,"path":["magnus","r_typed_data","RTypedData"],"kind":"struct"},"2:34219:8976":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"20:553:2216":{"crate_id":20,"path":["magnus","encoding","EncodingCapable"],"kind":"trait"},"2:3026:9212":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:15615:4442":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"16:2744:13209":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"5:692:116":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:7269:31956":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:45607:4755":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"20:2987:2210":{"crate_id":20,"path":["magnus","r_string","IntoRString"],"kind":"trait"},"6:5160:12926":{"crate_id":6,"path":["libc","unix","bsd","apple","b64","bpf_hdr"],"kind":"struct"},"20:1438:2666":{"crate_id":20,"path":["magnus","method","InitReturn"],"kind":"trait"},"18:583:18896":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:46054:4727":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:10051:14116":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:11467:1657":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:9730:14292":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"16:8294:134":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"5:2154:29338":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:9267:4434":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"16:7828:14206":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:8850:23114":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:38316:8888":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:3392:3030":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"6:4063:12713":{"crate_id":6,"path":["libc","unix","bsd","apple","xsw_usage"],"kind":"struct"},"11:700:2739":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:38419:9366":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"18:80:18878":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"16:6499:14158":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:15747:18705":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:14757:18635":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"16:6171:212":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:15546:18691":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:8988:26134":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"1:10985:4521":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:13395:17389":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:12600:134":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"21:4235:2194":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RMatch"],"kind":"struct"},"17:14439:17923":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:44421:5676":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int8x8x2_t"],"kind":"struct"},"1:2370:4423":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:2586:3093":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:2518:4484":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:34391:9162":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:2523:201":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:15345:4704":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"11:1923:4347":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:8652:4328":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:35797:4601":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"21:4136:21391":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_memory_view_entry"],"kind":"struct"},"21:3219:21354":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","st_retval"],"kind":"enum"},"17:15507:18687":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:24484:27820":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:10211:4448":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:45978:4715":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:7968:4501":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"16:7677:216":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:8295:4617":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:15842:17371":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"2:19959:272":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"6:3642:12683":{"crate_id":6,"path":["libc","unix","bsd","apple","aiocb"],"kind":"struct"},"17:15079:18653":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:3778:12693":{"crate_id":6,"path":["libc","unix","bsd","apple","ftrimactivefile_t"],"kind":"struct"},"20:3943:2167":{"crate_id":20,"path":["magnus","typed_data","TypedData"],"kind":"trait"},"2:38090:8895":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"16:2810:13212":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:44372:5671":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint32x4_t"],"kind":"struct"},"1:7745:4485":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"6:3713:12686":{"crate_id":6,"path":["libc","unix","bsd","apple","pthread_mutexattr_t"],"kind":"struct"},"15:327:13145":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"11:1903:4344":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:9616:29000":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:2659:8997":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:0:1975":{"crate_id":16,"path":["gimli"],"kind":"module"},"21:3452:4088":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_data_type_struct"],"kind":"struct"},"2:12522:8862":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:5127:12925":{"crate_id":6,"path":["libc","unix","bsd","apple","b64","if_data"],"kind":"struct"},"17:15519:18688":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:9703:22860":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:13026:14590":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"6:3798:9931":{"crate_id":6,"path":["libc","unix","bsd","apple","statvfs"],"kind":"struct"},"17:13285:17381":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:10337:14303":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"11:1566:13108":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:3668:4517":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:24960:202":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:16406:27886":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"16:6531:14160":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:34916:2623":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"21:2651:9973":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","timespec"],"kind":"struct"},"2:46244:27860":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"5:3594:4328":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:13300:113":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"21:3140:21347":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RString__bindgen_ty_1"],"kind":"union"},"16:7054:32008":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"16:6279:14144":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"18:508:32887":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:2600:3077":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:11675:14486":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:7414:9150":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:11479:795":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"16:4344:13670":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"6:4689:12766":{"crate_id":6,"path":["libc","unix","bsd","apple","pthread_rwlock_t"],"kind":"struct"},"2:3193:2283":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"20:123:3143":{"crate_id":20,"path":["magnus","block","wrap_closure","Closure"],"kind":"struct"},"2:3329:217":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"5:4020:3024":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"20:3429:19281":{"crate_id":20,"path":["magnus","scan_args","ScanArgsSplat"],"kind":"trait"},"17:10813:32369":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"21:4370:21404":{"crate_id":21,"path":["rb_sys","bindings","unstable","rb_matchext_struct"],"kind":"struct"},"20:7766:2201":{"crate_id":20,"path":["magnus","symbol","Symbol"],"kind":"struct"},"1:6718:3112":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"20:4819:18987":{"crate_id":20,"path":["magnus","encoding","CType"],"kind":"enum"},"16:5322:14096":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:44346:5669":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly16x8_t"],"kind":"struct"},"2:45878:4756":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:6545:14161":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"17:11549:14434":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:38005:8878":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"11:1728:152":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:14509:17927":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"5:6484:3024":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"9:393:12985":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"20:4611:2607":{"crate_id":20,"path":["magnus","value","LazyId"],"kind":"struct"},"5:3184:4328":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"21:2817:2654":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RBasic"],"kind":"struct"},"17:12301:14539":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:37263:9351":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"5:5992:3039":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"11:883:4339":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:11978:14448":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:4889:12783":{"crate_id":6,"path":["libc","unix","bsd","apple","mach_task_basic_info"],"kind":"struct"},"1:10067:3121":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"6:4376:12746":{"crate_id":6,"path":["libc","unix","bsd","apple","vnode_info_path"],"kind":"struct"},"18:420:149":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"11:837:4335":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"16:7342:31889":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:8326:4354":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:12972:14276":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:46768:4734":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:13162:17374":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:3747:10021":{"crate_id":6,"path":["libc","unix","bsd","apple","sigaction"],"kind":"struct"},"17:11590:14401":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:34461:2805":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"6:3680:12465":{"crate_id":6,"path":["libc","unix","bsd","apple","mach_timebase_info"],"kind":"struct"},"2:12542:8861":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:13182:17375":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"21:4259:21399":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_vm_struct"],"kind":"struct"},"2:3407:143":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:37810:8853":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:15125:18658":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:2996:8787":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"5:3343:3044":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"9:357:13000":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:3095:9223":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:2946:134":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:15177:18661":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"21:3146:21348":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RString__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"18:527:18892":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:47550:4764":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"6:119:9655":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"11:2326:4341":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"17:15337:18678":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:33259:8791":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"20:3426:19280":{"crate_id":20,"path":["magnus","scan_args","ScanArgsOpt"],"kind":"trait"},"2:45629:4761":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:3040:4698":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:4155:12721":{"crate_id":6,"path":["libc","unix","bsd","apple","sockaddr_inarp"],"kind":"struct"},"1:482:3089":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:3020:9209":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:2944:232":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:640:4307":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:11604:14436":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"2:35950:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:9918:14297":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:3423:4439":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:5957:9163":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:1040:4340":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:11489:1696":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:11485:1639":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:8012:4473":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:13097:17371":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:11617:14437":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"6:1130:10381":{"crate_id":6,"path":["libc","unix","bsd","regex_t"],"kind":"struct"},"2:34716:9182":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:44890:5723":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint32x4x4_t"],"kind":"struct"},"5:790:3004":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:8016:175":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:15384:18683":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"20:3339:19277":{"crate_id":20,"path":["magnus","scan_args","ArgSpec"],"kind":"struct"},"17:1203:14352":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"20:1332:1806":{"crate_id":20,"path":["magnus","method"],"kind":"module"},"16:6386:14151":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:3015:9210":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"21:4488:21403":{"crate_id":21,"path":["rb_sys","bindings","internal","rb_io_internal_buffer"],"kind":"struct"},"2:38427:9365":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:16460:27869":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:38211:8900":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:4745:13831":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:33379:221":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"15:394:13152":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"2:47612:4785":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"20:4946:19028":{"crate_id":20,"path":["magnus","error","Tag"],"kind":"enum"},"2:36525:8800":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:5253:4629":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:8337:4618":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:867:4330":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:4342:12744":{"crate_id":6,"path":["libc","unix","bsd","apple","vinfo_stat"],"kind":"struct"},"2:44700:5704":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint16x8x3_t"],"kind":"struct"},"6:1118:10380":{"crate_id":6,"path":["libc","unix","bsd","fsid_t"],"kind":"struct"},"14:165:13117":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:7462:14184":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:14266:17911":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:12536:14549":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"2:4201:107":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"16:6696:13135":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"6:4962:12791":{"crate_id":6,"path":["libc","unix","bsd","apple","ifreq"],"kind":"struct"},"1:5568:4650":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"18:410:18903":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:12531:8864":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:14385:17919":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:5602:4652":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"20:1373:2665":{"crate_id":20,"path":["magnus","method","private","ReturnValue"],"kind":"trait"},"20:8026:2614":{"crate_id":20,"path":["magnus","value","Qnil"],"kind":"struct"},"2:24392:8924":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"5:5807:257":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:44601:5694":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int16x4x2_t"],"kind":"struct"},"1:7991:4441":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"5:7306:3013":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:44270:5665":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint8x16_t"],"kind":"struct"},"2:34470:9183":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:14698:18634":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:3151:8790":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:9923:111":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:10315:14266":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:3236:4372":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:11448:26142":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:34513:9177":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"20:7069:2185":{"crate_id":20,"path":["magnus","module","RModule"],"kind":"struct"},"1:5461:4661":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:5768:3030":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:3199:4493":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:3032:13219":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"21:4414:2188":{"crate_id":21,"path":["rb_sys","bindings","stable","RArray"],"kind":"struct"},"1:9260:135":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"5:5344:3001":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:6119:226":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:10325:23140":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:44661:5700":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint16x4x2_t"],"kind":"struct"},"1:5454:3105":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:5673:3030":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:5038:4502":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"11:687:4329":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:14296:17913":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:3392:9228":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"5:2975:29278":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:11701:14488":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:5079:854":{"crate_id":2,"path":["core","iter"],"kind":"module"},"11:2403:4329":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"11:102:31596":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:504:3021":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"20:7406:2199":{"crate_id":20,"path":["magnus","r_struct","sys","RStruct"],"kind":"struct"},"1:3986:4536":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:2644:13205":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:35830:4602":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"23:49:1809":{"crate_id":23,"path":["magnus_macros","wrap"],"kind":"proc_attribute"},"17:15117:18657":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:12588:8890":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:34692:4474":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:38678:177":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:2144:3021":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:12746:14315":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"11:1676:2994":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"6:627:9986":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:4786:4593":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"16:5588:14118":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:7513:14188":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:15480:18685":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"5:1115:29262":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"6:3734:12689":{"crate_id":6,"path":["libc","unix","bsd","apple","siginfo_t"],"kind":"struct"},"16:2359:13193":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"16:5435:31724":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"21:4519:21405":{"crate_id":21,"path":["rb_sys","bindings","internal","rb_internal_thread_event_data"],"kind":"struct"},"17:14633:18632":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:10303:23143":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"17:13633:17873":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:44910:5725":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","float32x2x3_t"],"kind":"struct"},"6:4653:12518":{"crate_id":6,"path":["libc","unix","bsd","apple","statfs"],"kind":"struct"},"17:12029:14456":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"9:0:1969":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:15943:17374":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"1:8896:183":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:4773:14555":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"21:2712:21335":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","_bindgen_ty_2"],"kind":"union"},"1:11476:691":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:44961:5730":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int64x1x2_t"],"kind":"struct"},"6:4568:12757":{"crate_id":6,"path":["libc","unix","bsd","apple","attrreference_t"],"kind":"struct"},"6:4969:12792":{"crate_id":6,"path":["libc","unix","bsd","apple","__c_anonymous_ifc_ifcu"],"kind":"union"},"5:1789:3044":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"5:3753:4360":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"11:2383:4328":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"5:6871:3056":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:34250:27723":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"10:36:31587":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"17:10242:14302":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:15267:18670":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:8604:205":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"7:77:12962":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:14989:14346":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:7708:14200":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"5:7510:2822":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:37592:8850":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"20:5000:2177":{"crate_id":20,"path":["magnus","integer","Integer"],"kind":"struct"},"14:221:13126":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:15212:18665":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:15301:18674":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"5:212:2999":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"16:6569:14162":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"11:1066:13105":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"21:4151:21392":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_ractor_local_storage_type"],"kind":"struct"},"2:44530:5687":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint8x16x4_t"],"kind":"struct"},"2:38431:9359":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"20:7334:2189":{"crate_id":20,"path":["magnus","r_bignum","RBignum"],"kind":"struct"},"1:8255:4615":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:12828:14319":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:16123:18863":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"2:44580:5692":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly8x16x3_t"],"kind":"struct"},"17:13218:17377":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:45081:5742":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly64x1x2_t"],"kind":"struct"},"17:12560:14584":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"5:2183:30300":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:16383:27829":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:11432:25483":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"5:7634:3048":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"18:592:18889":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:8347:4328":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"20:4912:19025":{"crate_id":20,"path":["magnus","error","RubyUnavailableError"],"kind":"enum"},"5:1516:4334":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"5:7618:3044":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"6:4574:12758":{"crate_id":6,"path":["libc","unix","bsd","apple","vol_capabilities_attr_t"],"kind":"struct"},"6:579:9979":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:3858:12700":{"crate_id":6,"path":["libc","unix","bsd","apple","if_msghdr"],"kind":"struct"},"2:47158:4752":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"20:664:2676":{"crate_id":20,"path":["magnus","error","IntoError"],"kind":"trait"},"2:3413:8942":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:44293:5666":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly8x16_t"],"kind":"struct"},"1:3964:4534":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"6:5216:12935":{"crate_id":6,"path":["libc","unix","bsd","apple","b64","aarch64","align","__darwin_arm_thread_state64"],"kind":"struct"},"2:34186:8978":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"20:7093:19169":{"crate_id":20,"path":["magnus","numeric","NumericValue"],"kind":"struct"},"2:3085:9221":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:2334:9238":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:3992:4537":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"20:1294:2178":{"crate_id":20,"path":["magnus","into_value","ArgList"],"kind":"trait"},"1:8598:4633":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:619:9985":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:7736:14202":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:6362:4657":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:8042:4472":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"21:4348:2188":{"crate_id":21,"path":["rb_sys","bindings","unstable","RArray"],"kind":"struct"},"16:6583:14163":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"5:7276:2739":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:8793:23050":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:13909:17888":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:10207:14301":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:8323:4350":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:4477:12753":{"crate_id":6,"path":["libc","unix","bsd","apple","rusage_info_v3"],"kind":"struct"},"6:605:9983":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"20:7778:2202":{"crate_id":20,"path":["magnus","thread","Thread"],"kind":"struct"},"20:7988:1807":{"crate_id":20,"path":["magnus","value","Value"],"kind":"struct"},"20:3897:2205":{"crate_id":20,"path":["magnus","typed_data","DataType"],"kind":"struct"},"20:3998:149":{"crate_id":20,"path":["magnus","typed_data","Hash"],"kind":"trait"},"16:6687:14165":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"6:538:9975":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"20:7784:2203":{"crate_id":20,"path":["magnus","time","Time"],"kind":"struct"},"2:36532:8807":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"16:7102:14179":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:12230:14501":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:3677:3024":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:4534:8955":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:10879:23068":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:6346:14147":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:26184:1807":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"16:2788:13211":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:4230:12730":{"crate_id":6,"path":["libc","unix","bsd","apple","sa_endpoints_t"],"kind":"struct"},"16:2864:13214":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:38068:8894":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:10216:4450":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"21:3288:21357":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RArray__bindgen_ty_1"],"kind":"union"},"5:6959:269":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:5390:4631":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"16:6879:14171":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"20:7376:2196":{"crate_id":20,"path":["magnus","r_rational","RRational"],"kind":"struct"},"2:44550:5689":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly8x8x3_t"],"kind":"struct"},"16:5088:13910":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"20:7419:31951":{"crate_id":20,"path":["magnus","r_struct","sys","Heap"],"kind":"struct"},"6:3635:12682":{"crate_id":6,"path":["libc","unix","bsd","apple","ip_mreq_source"],"kind":"struct"},"17:12396:14508":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:15589:18694":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:36786:27866":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:34429:9172":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:10422:14304":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:45120:5746":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly64x2x3_t"],"kind":"struct"},"2:34087:8982":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:34159:4302":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:1567:4347":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:14041:17897":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:37856:8882":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"5:2972:2799":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:2947:250":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:2200:135":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:45021:5736":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint64x1x2_t"],"kind":"struct"},"11:2569:4325":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:5203:4626":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:3928:4533":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:11325:3141":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:256:32432":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"11:2423:2739":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"20:23:2170":{"crate_id":20,"path":["magnus","api","Ruby"],"kind":"struct"},"2:44490:5683":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","uint8x8x3_t"],"kind":"struct"},"20:7075:2183":{"crate_id":20,"path":["magnus","module","Attr"],"kind":"enum"},"2:33498:8937":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:26205:9275":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:10419:3082":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"2:13349:148":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"5:1486:4331":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:10915:14331":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:16080:4442":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"20:4010:2804":{"crate_id":20,"path":["magnus","typed_data","Cmp"],"kind":"trait"},"2:47300:4723":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"16:7041:31945":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:10520:32444":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:8630:4635":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"5:830:3007":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"5:6117:3030":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:4451:227":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:5268:111":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:10293:4475":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:13935:17890":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:2953:253":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:2936:243":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"0:84:1838":{"crate_id":0,"path":["ext","Secret"],"kind":"struct"},"1:9459:3120":{"crate_id":1,"path":["std","sys","unix","fs","copy","FreeOnDrop"],"kind":"struct"},"1:10402:3124":{"crate_id":1,"path":["std","sys","unix","locks","pthread_mutex","PthreadMutexAttr"],"kind":"struct"},"2:6570:27844":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"11:123:2988":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"21:3546:21368":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_debug_inspector_struct"],"kind":"struct"},"2:36145:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"21:3326:2172":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RClass"],"kind":"struct"},"17:11743:14489":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:12572:14553":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"2:44247:5664":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int8x16_t"],"kind":"struct"},"2:46532:4769":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:10497:4630":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:15101:18655":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"6:5121:12924":{"crate_id":6,"path":["libc","unix","bsd","apple","b64","timeval32"],"kind":"struct"},"17:10988:14342":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:16049:18857":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"11:1887:2739":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:2789:134":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"20:4277:2212":{"crate_id":20,"path":["magnus","value","private","ReprValue"],"kind":"trait"},"9:237:4615":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:34490:9164":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:45832:4750":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:37674:4475":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:3792:12695":{"crate_id":6,"path":["libc","unix","bsd","apple","radvisory"],"kind":"struct"},"17:11001:14341":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:4585:4550":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"6:4721:12770":{"crate_id":6,"path":["libc","unix","bsd","apple","utmpx"],"kind":"struct"},"6:4907:12785":{"crate_id":6,"path":["libc","unix","bsd","apple","os_unfair_lock_s"],"kind":"struct"},"2:16124:4833":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:2990:9187":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:10925:14332":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:33335:216":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"16:7534:14190":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:12999:14589":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:44460:5680":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","int8x16x3_t"],"kind":"struct"},"2:37756:8885":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"16:3065:13221":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:34333:4436":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:16496:4527":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:16371:4525":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:13463:17394":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:14993:28533":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:8786:4284":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:45785:4788":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:10016:14265":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"16:6415:14153":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:8722:4665":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"21:3158:21350":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RString__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"2:38407:9361":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:11945:14451":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:7792:14205":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"18:471:32883":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:357:4298":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:4007:12710":{"crate_id":6,"path":["libc","unix","bsd","apple","proc_taskinfo"],"kind":"struct"},"2:35840:9309":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:9272:3119":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"16:7284:4601":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:44148:5654":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly8x8_t"],"kind":"struct"},"2:12282:9369":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:7360:32080":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:36028:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:47410:4758":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:33484:8929":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:12659:14272":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"5:1315:4343":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:33319:219":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"16:6944:31710":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"6:4201:12726":{"crate_id":6,"path":["libc","unix","bsd","apple","sembuf"],"kind":"struct"},"17:15855:17372":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"1:7351:2201":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"14:40:17373":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:5393:4632":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"16:6425:14154":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"11:875:4338":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:12486:14556":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"17:9943:14278":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:11563:14405":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:16988:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"17:11714:14446":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:7737:23130":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:15238:4703":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:12872:14268":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:3079:9220":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"16:3049:13220":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:51978:5754":{"crate_id":2,"path":["core","core_arch","aarch64","neon","float64x2x3_t"],"kind":"struct"},"6:4029:12711":{"crate_id":6,"path":["libc","unix","bsd","apple","proc_bsdinfo"],"kind":"struct"},"21:2619:21334":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","__sFILE"],"kind":"struct"},"21:3964:21384":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_io_event"],"kind":"enum"},"2:2529:208":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:7823:23105":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"16:6968:14176":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"5:7003:3057":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"21:4037:21387":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","ruby_memory_view_flags"],"kind":"enum"},"5:1286:4342":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:13235:17378":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"21:4004:21386":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_io"],"kind":"struct"},"1:4583:4548":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:4768:12775":{"crate_id":6,"path":["libc","unix","bsd","apple","processor_set_load_info"],"kind":"struct"},"21:2748:21341":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","_bindgen_ty_8"],"kind":"union"},"2:45090:5743":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly64x1x3_t"],"kind":"struct"},"17:12930:14322":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:35483:4512":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:10512:23007":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"6:4142:12720":{"crate_id":6,"path":["libc","unix","bsd","apple","sockaddr_dl"],"kind":"struct"},"17:15733:18704":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:38105:8896":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"20:1911:1168":{"crate_id":20,"path":["magnus","prelude"],"kind":"module"},"17:11459:14431":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:13869:17885":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"5:3191:4345":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"16:7090:31668":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:37646:8876":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:11690:14487":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:15253:18669":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:34129:8983":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:15217:4442":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:4189:28125":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:8930:4446":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:5866:14131":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"5:683:256":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:3978:4535":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:5575:4651":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:10896:14330":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"16:6261:14143":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:10718:4446":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"16:5049:13895":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:34139:8984":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:44770:5711":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly16x8x4_t"],"kind":"struct"},"11:1025:4341":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"5:6013:9572":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"6:1313:10516":{"crate_id":6,"path":["libc","unix","bsd","apple","timezone"],"kind":"enum"},"17:14181:17905":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"21:4536:2983":{"crate_id":21,"path":["rb_sys","tracking_allocator","MemsizeDelta"],"kind":"struct"},"2:3419:8941":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:7862:14207":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:35763:170":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:38296:8887":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"6:526:9973":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:35636:4523":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"16:7568:14193":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:11141:14365":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"21:3188:21352":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","st_table_entry"],"kind":"struct"},"1:2911:3096":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"11:2151:4342":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:10653:4635":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:51958:5752":{"crate_id":2,"path":["core","core_arch","aarch64","neon","float64x1x4_t"],"kind":"struct"},"2:38622:213":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:11307:14378":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"20:8044:2206":{"crate_id":20,"path":["magnus","value","Fixnum"],"kind":"struct"},"2:37039:4451":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"21:3883:21383":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","ruby_econv_flag_type"],"kind":"enum"},"17:12290:14529":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:13183:9001":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"5:4212:3030":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"18:605:18897":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:3321:4481":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:1909:704":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"21:3730:21377":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","OnigRepeatRange"],"kind":"struct"},"2:44721:5706":{"crate_id":2,"path":["core","core_arch","arm_shared","neon","poly16x4x2_t"],"kind":"struct"},"2:17050:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:36067:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"14:7:13116":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:34950:9155":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:7907:127":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:9705:23138":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"2:9424:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:4224:8786":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"21:3249:21355":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","ruby_rarray_flags"],"kind":"enum"},"2:46076:4733":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:14208:17907":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:14991:28536":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"21:4250:21398":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","rb_internal_thread_event_hook"],"kind":"struct"},"18:371:32888":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:16423:27718":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:1973:185":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:38720:27725":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:16032:18856":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"16:8239:1807":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"20:7535:216":{"crate_id":20,"path":["magnus","range","Range"],"kind":"struct"},"2:37531:8832":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:6288:3109":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"14:160:13116":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:2354:4418":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:9684:4387":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"11:396:2992":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:914:4333":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:645:4308":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"20:1118:19118":{"crate_id":20,"path":["magnus","gc","Compactor"],"kind":"struct"},"2:10842:8857":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:37431:28180":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:2944:8788":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"16:6083:13162":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"21:3335:2191":{"crate_id":21,"path":["rb_sys","bindings","uncategorized","RFile"],"kind":"struct"},"5:7548:8906":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:14934:18645":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:10774:4329":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:13096:146":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:35989:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:15671:18699":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"}},"external_crates":{"23":{"name":"magnus_macros","html_root_url":null},"20":{"name":"magnus","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"seq_macro","html_root_url":"https://docs.rs/seq-macro/0.3.5/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"rb_sys","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}